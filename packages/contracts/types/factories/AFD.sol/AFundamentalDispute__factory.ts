/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  AFundamentalDispute,
  AFundamentalDisputeInterface,
} from "../../AFD.sol/AFundamentalDispute";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ApprovalCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "ApprovalQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "BalanceQueryForZeroAddress",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "supply",
        type: "uint256",
      },
    ],
    name: "MaxSupplyExceeded",
    type: "error",
  },
  {
    inputs: [],
    name: "MintERC2309QuantityExceedsLimit",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "limit",
        type: "uint256",
      },
    ],
    name: "MintLimitExceeded",
    type: "error",
  },
  {
    inputs: [],
    name: "MintToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "MintZeroQuantity",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnerQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnershipNotInitializedForExtraData",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferFromIncorrectOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToNonERC721ReceiverImplementer",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "URIQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "expectedPayment",
        type: "uint256",
      },
    ],
    name: "WrongPayment",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "previousBaseTokenURI",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "newBaseTokenURI",
        type: "string",
      },
    ],
    name: "BaseTokenURIUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "fromTokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "toTokenId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "ConsecutiveTransfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "contract IRenderer",
        name: "previousRenderer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "contract IRenderer",
        name: "newRenderer",
        type: "address",
      },
    ],
    name: "RendererUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "artist",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseTokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "developer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "holderPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "startTokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "quantity",
        type: "uint256",
      },
    ],
    name: "normalizeOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "numberMinted",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownershipOf",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "addr",
            type: "address",
          },
          {
            internalType: "uint64",
            name: "startTimestamp",
            type: "uint64",
          },
          {
            internalType: "bool",
            name: "burned",
            type: "bool",
          },
          {
            internalType: "uint24",
            name: "extraData",
            type: "uint24",
          },
        ],
        internalType: "struct IERC721A.TokenOwnership",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "publicPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renderer",
    outputs: [
      {
        internalType: "contract IRenderer",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "salePrice",
        type: "uint256",
      },
    ],
    name: "royaltyInfo",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "royaltyProvider",
    outputs: [
      {
        internalType: "contract IERC2981",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_baseTokenURI",
        type: "string",
      },
    ],
    name: "setBaseTokenURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint96",
        name: "_royaltyBasisPoints",
        type: "uint96",
      },
    ],
    name: "setDefaultRoyalty",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IRenderer",
        name: "_renderer",
        type: "address",
      },
    ],
    name: "setRenderer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC2981",
        name: "_royaltyProvider",
        type: "address",
      },
    ],
    name: "setRoyaltyProvider",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalMinted",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "withdrawAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "withdrawAllERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC721",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "withdrawERC721",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a060405234620001f2576200001462000239565b60207f412046756e64616d656e74616c2044697370757465000000000000000000000081830152620000456200024e565b7f4146554e44414d454e54414c444953505554450000000000000000000000000082820152825190916001600160401b038211620001e2575b62000096826200009060025462000263565b620002a0565b80601f83116001146200015157508190620000cf9460009262000145575b50508160011b916000199060031b1c19161760025562000352565b620000da6001600055565b620000e53362000590565b60da6080527f5daa87a0e9463431830481fd4b6e3403442dfb9a12b9c07597e9f61d50b633c86000604051a16200011b62000456565b62000125620004f3565b6040516121de908162000674823960805181818161066101526114a90152f35b015190503880620000b4565b60026000529193601f1985167f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace936000905b828210620001c9575050916001939186620000cf979410620001af575b505050811b0160025562000352565b015160001960f88460031b161c19169055388080620001a0565b8060018697829497870151815501960194019062000183565b620001ec620001f7565b6200007e565b600080fd5b50634e487b7160e01b600052604160045260246000fd5b604081019081106001600160401b038211176200022a57604052565b62000234620001f7565b604052565b6040519062000248826200020e565b60158252565b604051906200025d826200020e565b60138252565b90600182811c9216801562000295575b60208310146200027f57565b634e487b7160e01b600052602260045260246000fd5b91607f169162000273565b601f8111620002ad575050565b6000906002825260208220906020601f850160051c83019410620002ee575b601f0160051c01915b828110620002e257505050565b818155600101620002d5565b9092508290620002cc565b601f811162000306575050565b6000906003825260208220906020601f850160051c8301941062000347575b601f0160051c01915b8281106200033b57505050565b8181556001016200032e565b909250829062000325565b80519091906001600160401b03811162000446575b6200037f816200037960035462000263565b620002f9565b602080601f8311600114620003be5750819293600092620003b2575b50508160011b916000199060031b1c191617600355565b0151905038806200039b565b6003600052601f198316949091907fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b926000905b8782106200042d57505083600195961062000413575b505050811b01600355565b015160001960f88460031b161c1916905538808062000408565b80600185968294968601518155019501930190620003f2565b62000450620001f7565b62000367565b6000805473c9c022fcfebe730710ae93ca9247c5ec9d9236d0918290526005602052600080516020620028728339815191528054680e000000000000000e019055600e916001600160e81b0319620004ad620005de565b60e81b164260a01b178117620004cd836000526004602052604060002090565b55600082600080516020620028528339815191526020604051600d84018152a401600055565b6000805473c9c022fcfebe730710ae93ca9247c5ec9d9236d0918290526005602052600080516020620028728339815191528054680600000000000000060190556006916001600160e81b03196200054a620005de565b60e81b164260a01b1781176200056a836000526004602052604060002090565b55600082600080516020620028528339815191526020604051600584018152a401600055565b600880546001600160a01b039283166001600160a01b031982168117909255604051919216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a3565b600143106200065d5762ffffff5a604051602081019144835260001943014060408301526000606083015273c9c022fcfebe730710ae93ca9247c5ec9d9236d0608083015260a082015260a0815260c0810181811060018060401b038211176200064d575b6040525190201690565b62000657620001f7565b62000643565b634e487b7160e01b600052601160045260246000fdfe60806040526004361015610013575b600080fd5b60003560e01c806301ffc9a71461030257806306fdde03146102f9578063081812fc146102f0578063095ea7b3146102e75780631249c58b146102de578063140364a1146102d557806318160ddd146102cc57806323b872dd146102c35780632a55205a146102ba57806330176e13146102b157806342842e0e146102a857806343bc1612146101fd57806352f0832a1461029f57806355ea73281461029657806356d3163d1461028d57806359edf34e146102845780636352211e1461027b57806370a0823114610272578063715018a6146102695780637b9f76b5146102605780638ada6b0f146102575780638da5cb5b1461024e57806395d89b4114610245578063a22cb4651461023c578063a2309ff814610233578063a945bf801461022a578063ae11c7f814610221578063b88d4fde14610218578063b9b8f4d81461020f578063c87b56dd14610206578063ca4b208b146101fd578063d547cfb7146101f4578063d5abeb01146101eb578063d6948b75146101e2578063dc33e681146101d9578063e985e9c5146101d0578063f2fde38b146101c75763fa09e630146101bf57600080fd5b61000e611739565b5061000e611669565b5061000e611600565b5061000e6115b0565b5061000e6114cc565b5061000e611490565b5061000e6113fa565b5061000e610b2f565b5061000e611304565b5061000e6112bc565b5061000e611230565b5061000e611025565b5061000e611001565b5061000e610fde565b5061000e610f48565b5061000e610e96565b5061000e610e6c565b5061000e610e42565b5061000e610d9b565b5061000e610d39565b5061000e610cd9565b5061000e610ca9565b5061000e610c7f565b5061000e610c06565b5061000e610be2565b5061000e610b5f565b5061000e610b0b565b5061000e610993565b5061000e610956565b5061000e610941565b5061000e6108ed565b5061000e610856565b5061000e610641565b5061000e610569565b5061000e610503565b5061000e610426565b5061000e61031d565b6001600160e01b031981160361000e57565b503461000e57602036600319011261000e57602060043561033d8161030b565b63ffffffff60e01b166301ffc9a760e01b811490819082156103a7575b8215610396575b8215610374575b50506040519015158152f35b63152a902d60e11b149150811561038e575b503880610368565b905038610386565b635b5e139f60e01b81149250610361565b6380ac58cd60e01b8114925061035a565b918091926000905b8282106103d85750116103d1575050565b6000910152565b915080602091830151818601520182916103c0565b90602091610406815180928185528580860191016103b8565b601f01601f1916010190565b9060206104239281815201906103ed565b90565b503461000e5760008060031936011261050057604051908060025461044a81611338565b808552916001918083169081156104df5750600114610484575b61048085610474818703826111d6565b60405191829182610412565b0390f35b9250600283527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace5b8284106104c757505050810160200161047482610480610464565b805460208587018101919091529093019281016104ac565b60ff1916602087015250506040840192506104749150839050610480610464565b80fd5b503461000e57602036600319011261000e5760043561052181611885565b15610546576000526006602052602060018060a01b0360406000205416604051908152f35b6040516333d1c03960e21b8152600490fd5b6001600160a01b0381160361000e57565b50604036600319011261000e5760043561058281610558565b6001600160a01b039060243582610598826117ef565b16918233036105f0575b600093828552600660205260408520911690816001600160601b0360a01b825416179055604051927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258585a4f35b60ff610629336106128660018060a01b03166000526007602052604060002090565b9060018060a01b0316600052602052604060002090565b54166105a2576040516367d9dca160e11b8152600490fd5b50600080600319360112610500578054600119600019820111610849575b7f0000000000000000000000000000000000000000000000000000000000000000808211610831575067016345785d8a00008034036108195750336000908152600560205260409081902054901c6001600160401b03166108005760409081516106c8816111a0565b8381523360009081526005602052604090208054680100000000000000010190556107186001600160e81b03196106fe33611ce1565b4260a01b60e89190911b91909116173317600160e11b1790565b61072c836000526004602052604060002090565b556001808301927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef813388838180a482855b8681036107f15750505033156107e157838655333b61077c57858551f35b9080805b61079d575b505050508254036107995738808080858551f35b5080fd5b156107d4575b856107b96107b5858486019533611b88565b1590565b6107c35781610780565b85516368d2bf6b60e11b8152600490fd5b8382106107a35780610785565b8451622e076360e81b8152600490fd5b80338a858180a401839061075e565b604051637e0311c360e11b815260016004820152602490fd5b6024906040519063b23bee0560e01b82526004820152fd5b6024906040519063cbbf111360e01b82526004820152fd5b610851611cb2565b61065f565b503461000e57602036600319011261000e57610870611f50565b50610879611f50565b5060806108876004356117ef565b62ffffff610893611f50565b9160018060a01b03811692838152602081016001600160401b0390818460a01c16815260606040840193600160e01b861615158552019360e81c845260405195865251166020850152511515604084015251166060820152f35b503461000e57600036600319011261000e576000546001546040519103600019018152602090f35b606090600319011261000e5760043561092d81610558565b9060243561093a81610558565b9060443590565b5061095461094e36610915565b916118c0565b005b503461000e57604036600319011261000e57610976602435600435611f93565b604080516001600160a01b03939093168352602083019190915290f35b503461000e5760208060031936011261000e576001600160401b0360043581811161000e573660238201121561000e57806004013591821161000e576024903682848301011161000e576109e5611c5a565b60405193604085527f19c1a81f34d9a8d208a44017474815e9089aff4b57e461c08509577eea2c3900610a1a60408701611372565b9580870383820152858752858585018489013760008387890101528281601f199889601f8a011601030190a1610a5a84610a55600d54611338565b61212e565b600094601f8511600114610a9a575050928293600093610a8d575b5050508160011b916000199060031b1c191617600d55005b0101359050388080610a75565b600d6000528416946000805160206121b2833981519152939181905b878210610af15750508460019610610ad5575b50505050811b01600d55005b60001960f88660031b161c199201013516905538808080610ac9565b806001849786839596890101358155019601920190610ab6565b50610954610b1836610915565b9060405192610b26846111a0565b60008452611a96565b503461000e57600036600319011261000e57602060405173c9c022fcfebe730710ae93ca9247c5ec9d9236d08152f35b503461000e5760408060031936011261000e576024356004803560005b838110610b8557005b80610b9260019284611cc9565b80600052846020818152886000205415610bc7575b5050506000198114610bba575b01610b7c565b610bc2611cb2565b610bb4565b610bd0836117ef565b92600052528660002055388481610ba7565b503461000e57600036600319011261000e57602060405167011c37937e0800008152f35b503461000e57602036600319011261000e57600435610c2481610558565b610c2c611c5a565b600c54604080516001600160a01b03808416825290931660208401819052927f10e9b6d73105db46c6a41a698f35efb8e1688178fe274b7b21f0bdc792de3ea59190a16001600160a01b03191617600c55005b503461000e57600036600319011261000e57600b546040516001600160a01b039091168152602090f35b503461000e57602036600319011261000e5760206001600160a01b03610cd06004356117ef565b16604051908152f35b503461000e57602036600319011261000e57600435610cf781610558565b6001600160a01b03168015610d2757600052600560205260206001600160401b0360406000205416604051908152f35b6040516323d3ad8160e21b8152600490fd5b503461000e5760008060031936011261050057610d54611c5a565b600880546001600160a01b031981169091556040519082906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08284a3f35b503461000e576000606036600319011261050057600435610dbb81610558565b8160443591610dc983610558565b610dd1611c5a565b6001600160a01b0390811692833b15610e3e57606490836040519586948593632142170760e11b855230600486015216602484015260243560448401525af18015610e31575b610e22575b50604051f35b610e2b90611165565b38610e1c565b610e39611b4b565b610e17565b8280fd5b503461000e57600036600319011261000e57600c546040516001600160a01b039091168152602090f35b503461000e57600036600319011261000e576008546040516001600160a01b039091168152602090f35b503461000e57600080600319360112610500576040519080600354610eba81611338565b808552916001918083169081156104df5750600114610ee35761048085610474818703826111d6565b9250600383527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b5b828410610f2657505050810160200161047482610480610464565b80546020858701810191909152909301928101610f0b565b8015150361000e57565b503461000e57604036600319011261000e57600435610f6681610558565b60243590610f7382610f3e565b3360009081526007602090815260408083206001600160a01b038516845290915290209115159160ff1981541660ff841617905560405191825260018060a01b0316907f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160203392a3005b503461000e57600036600319011261000e57602060001960005401604051908152f35b503461000e57600036600319011261000e57602060405167016345785d8a00008152f35b503461000e57604036600319011261000e5760043561104381610558565b6110ce6024359161105383610558565b61105b611c5a565b6040516370a0823160e01b815230600482015260209384926001600160a01b0316908383602481855afa928315611141575b600093611112575b5060405163a9059cbb60e01b81526001600160a01b03909116600482015260248101929092529092839190829060009082906044820190565b03925af18015611105575b6110df57005b8161095492903d106110fe575b6110f681836111d6565b81019061219c565b503d6110ec565b61110d611b4b565b6110d9565b611133919350843d861161113a575b61112b81836111d6565b81019061218d565b9138611095565b503d611121565b611149611b4b565b61108d565b50634e487b7160e01b600052604160045260246000fd5b6001600160401b03811161117857604052565b61118061114e565b604052565b604081019081106001600160401b0382111761117857604052565b602081019081106001600160401b0382111761117857604052565b60c081019081106001600160401b0382111761117857604052565b90601f801991011681019081106001600160401b0382111761117857604052565b6040519061120482611185565b565b6020906001600160401b038111611223575b601f01601f19160190565b61122b61114e565b611218565b50608036600319011261000e5760043561124981610558565b60243561125581610558565b606435916001600160401b03831161000e573660238401121561000e5782600401359161128183611206565b9261128f60405194856111d6565b808452366024828701011161000e5760208160009260246109549801838801378501015260443591611a96565b503461000e57602036600319011261000e576004356112da81610558565b6112e2611c5a565b600b80546001600160a01b0319166001600160a01b0392909216919091179055005b503461000e57602036600319011261000e57610480611324600435611daa565b6040519182916020835260208301906103ed565b90600182811c92168015611368575b602083101461135257565b634e487b7160e01b600052602260045260246000fd5b91607f1691611347565b600d546000929161138282611338565b808252916001908181169081156113e757506001146113a057505050565b91929350600d6000526000805160206121b2833981519152916000925b8484106113cf57505060209250010190565b805460208585018101919091529093019281016113bd565b60ff191660208401525050604001925050565b503461000e57600080600319360112610500576040519080600d5461141e81611338565b808552916001918083169081156104df57506001146114475761048085610474818703826111d6565b9250600d83526000805160206121b28339815191525b82841061147857505050810160200161047482610480610464565b8054602085870181019190915290930192810161145d565b503461000e57600036600319011261000e5760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b503461000e57602036600319011261000e576004356001600160601b03811680820361000e57612710906114fe611c5a565b1161155857610954906115123015156120e2565b61153161151d6111f7565b308152916001600160601b03166020830152565b805160209091015160a01b6001600160a01b0319166001600160a01b039190911617600955565b60405162461bcd60e51b815260206004820152602a60248201527f455243323938313a20726f79616c7479206665652077696c6c206578636565646044820152692073616c65507269636560b01b6064820152608490fd5b503461000e57602036600319011261000e5760206115f86004356115d381610558565b60018060a01b031660005260056020526001600160401b0360406000205460401c1690565b604051908152f35b503461000e57604036600319011261000e57602060ff61165d60043561162581610558565b6024359061163282610558565b60018060a01b03166000526007845260406000209060018060a01b0316600052602052604060002090565b54166040519015158152f35b503461000e57602036600319011261000e5760043561168781610558565b61168f611c5a565b6001600160a01b039081169081156116e55760009160085491816001600160601b0360a01b84161760085560405192167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08484a3f35b60405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b503461000e57602036600319011261000e5760043561175781610558565b61175f611c5a565b47156117bb57600080809247604051915af1611779611b58565b501561178157005b60405162461bcd60e51b81526020600482015260126024820152714661696c656420746f20776974686472617760701b6044820152606490fd5b60405162461bcd60e51b815260206004820152600c60248201526b5a65726f2062616c616e636560a01b6044820152606490fd5b6001908082111561180d575b604051636f96cda160e11b8152600490fd5b611821816000526004602052604060002090565b5491600160e01b83161561183557506117fb565b821561184057505090565b6000548210156117fb5790815b61185657505090565b90915060001901611871816000526004602052604060002090565b5491821561187e57505090565b908161184d565b806001111590816118b4575b8161189a575090565b90506000526004602052600160e01b604060002054161590565b60005481109150611891565b6118c9836117ef565b6001600160a01b039282841692828516849003611a855760008681526006602052604090208054909590919061190e6001600160a01b03831633908114908514171590565b611a41575b8316958615611a2f5761199492611a25575b506001600160a01b038181166000908152600560205260408082208054600019019055918516815220805460010190556001600160e81b0319906119709060e886901c908590611d41565b600160e11b936001600160a01b03164260a01b60e89290921b929092161717821790565b6119a8866000526004602052604060002090565b558116156119db575b507fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6000604051a4565b600184016119f3816000526004602052604060002090565b5415611a00575b506119b1565b60005481146119fa57611a1d906000526004602052604060002090565b5538806119fa565b6000905538611925565b604051633a954ecd60e21b8152600490fd5b611a6e6107b5611a67336106128660018060a01b03166000526007602052604060002090565b5460ff1690565b1561191357604051632ce44b5f60e11b8152600490fd5b60405162a1148160e81b8152600490fd5b929190611aa48282866118c0565b803b611ab1575b50505050565b611aba93611c31565b15611ac85738808080611aab565b6040516368d2bf6b60e11b8152600490fd5b9081602091031261000e57516104238161030b565b610423939260809260018060a01b0316825260006020830152604082015281606082015201906103ed565b6001600160a01b039182168152911660208201526040810191909152608060608201819052610423929101906103ed565b506040513d6000823e3d90fd5b3d15611b83573d90611b6982611206565b91611b7760405193846111d6565b82523d6000602084013e565b606090565b611bb160209160009394604051948580948193630a85bd0160e11b998a84523360048501611aef565b03926001600160a01b03165af160009181611c01575b50611bf357611bd4611b58565b80519081611bee576040516368d2bf6b60e11b8152600490fd5b602001fd5b6001600160e01b0319161490565b611c2391925060203d8111611c2a575b611c1b81836111d6565b810190611ada565b9038611bc7565b503d611c11565b92602091611bb1936000604051809681958294630a85bd0160e11b9a8b85523360048601611b1a565b6008546001600160a01b03163303611c6e57565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b50634e487b7160e01b600052601160045260246000fd5b81198111611cd5570190565b611cdd611cb2565b0190565b62ffffff9060014310611d34575b5a60405190602082019244845260001943014060408401526000606084015260018060a01b0316608083015260a082015260a08152611d2d816111bb565b5190201690565b611d3c611cb2565b611cef565b62ffffff92838116611da3575060014310611d96575b5a604051916020830193448552600019430140604085015260018060a01b03809216606085015216608083015260a082015260a08152611d2d816111bb565b611d9e611cb2565b611d57565b9250505090565b600c546001600160a01b03169081611dc6576104239150611e8e565b60405191829163c87b56dd60e01b8352600483015281602460009485935afa918215611e6e575b8092611df857505090565b9091503d8082843e611e0a81846111d6565b820191602081840312610799578051906001600160401b038211610e3e570182601f8201121561079957805191611e4083611206565b93611e4e60405195866111d6565b8385526020848401011161050057509061042391602080850191016103b8565b611e76611b4b565b611ded565b90611cdd602092828151948592016103b8565b611e9781611885565b15611f3e5760405190611eb482611ead81611372565b03836111d6565b815160009015611f2957506040519060a08201604052608082019060008252905b6000190190600a906030828206018353049081611ed5579050611f1792611f1d610423936080601f199485810192030181526040519586936020850190611e7b565b90611e7b565b039081018352826111d6565b91505060405190611f39826111a0565b815290565b604051630a14c4b560e41b8152600490fd5b60405190608082018281106001600160401b03821117611f86575b60405260006060838281528260208201528260408201520152565b611f8e61114e565b611f6b565b600b546001600160a01b031692919083611fb657611fb292935061203a565b9091565b9060446040928351958693849263152a902d60e11b8452600484015260248301525afa91821561202d575b6000908193611fef57509190565b92506040833d8211612025575b81612009604093836111d6565b810103126105005750602082519261202084610558565b015190565b3d9150611ffc565b612035611b4b565b611fe1565b919091600052600a60205261271060406000206040519061205a82611185565b546001600160a01b0380821680845260a09290921c602084015290156120be575b506120ab6001600160601b036020830151169185600019048311861515166120b1575b516001600160a01b031690565b93020490565b6120b9611cb2565b61209e565b60405191506120cc82611185565b600954908116825260a01c60208201523861207b565b156120e957565b60405162461bcd60e51b815260206004820152601960248201527f455243323938313a20696e76616c6964207265636569766572000000000000006044820152606490fd5b601f811161213a575050565b600090600d82526000805160206121b2833981519152906020601f850160051c83019410612183575b601f0160051c01915b82811061217857505050565b81815560010161216c565b9092508290612163565b9081602091031261000e575190565b9081602091031261000e575161042381610f3e56fed7b6990105719101dabeb77144f2a3385c8033acd3af97e9423a695e81ad1eb5a164736f6c634300080d000adeaa91b6123d068f5821d0fb0678463d1a8a6079fe8af5de3ce5e896dcf9133d7f731c7808058e892094a92984a4878342dc358142ef01e43878e6ed13923af4";

type AFundamentalDisputeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AFundamentalDisputeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AFundamentalDispute__factory extends ContractFactory {
  constructor(...args: AFundamentalDisputeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<AFundamentalDispute> {
    return super.deploy(overrides || {}) as Promise<AFundamentalDispute>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): AFundamentalDispute {
    return super.attach(address) as AFundamentalDispute;
  }
  override connect(signer: Signer): AFundamentalDispute__factory {
    return super.connect(signer) as AFundamentalDispute__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AFundamentalDisputeInterface {
    return new utils.Interface(_abi) as AFundamentalDisputeInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AFundamentalDispute {
    return new Contract(address, _abi, signerOrProvider) as AFundamentalDispute;
  }
}
