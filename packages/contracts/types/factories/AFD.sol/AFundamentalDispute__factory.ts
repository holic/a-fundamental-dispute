/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  AFundamentalDispute,
  AFundamentalDisputeInterface,
} from "../../AFD.sol/AFundamentalDispute";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IERC721",
        name: "_foldedFaces",
        type: "address",
      },
      {
        internalType: "address",
        name: "artist",
        type: "address",
      },
      {
        internalType: "address",
        name: "developer",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ApprovalCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "ApprovalQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "BalanceQueryForZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidQueryRange",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "mintsLeft",
        type: "uint256",
      },
    ],
    name: "MaxSupplyExceeded",
    type: "error",
  },
  {
    inputs: [],
    name: "MintERC2309QuantityExceedsLimit",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "mintsLeft",
        type: "uint256",
      },
    ],
    name: "MintLimitExceeded",
    type: "error",
  },
  {
    inputs: [],
    name: "MintToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "MintZeroQuantity",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
    ],
    name: "NoValidTokenDiscount",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnerQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnershipNotInitializedForExtraData",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferFromIncorrectOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToNonERC721ReceiverImplementer",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "URIQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "expectedPayment",
        type: "uint256",
      },
    ],
    name: "WrongPayment",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "previousBaseTokenURI",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "newBaseTokenURI",
        type: "string",
      },
    ],
    name: "BaseTokenURIUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_fromTokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_toTokenId",
        type: "uint256",
      },
    ],
    name: "BatchMetadataUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "fromTokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "toTokenId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "ConsecutiveTransfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "MetadataUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "contract IRenderer",
        name: "previousRenderer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "contract IRenderer",
        name: "newRenderer",
        type: "address",
      },
    ],
    name: "RendererUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "TokenDiscountUsed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseTokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "dispute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "disputes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "explicitOwnershipOf",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "addr",
            type: "address",
          },
          {
            internalType: "uint64",
            name: "startTimestamp",
            type: "uint64",
          },
          {
            internalType: "bool",
            name: "burned",
            type: "bool",
          },
          {
            internalType: "uint24",
            name: "extraData",
            type: "uint24",
          },
        ],
        internalType: "struct IERC721A.TokenOwnership",
        name: "ownership",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
    ],
    name: "explicitOwnershipsOf",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "addr",
            type: "address",
          },
          {
            internalType: "uint64",
            name: "startTimestamp",
            type: "uint64",
          },
          {
            internalType: "bool",
            name: "burned",
            type: "bool",
          },
          {
            internalType: "uint24",
            name: "extraData",
            type: "uint24",
          },
        ],
        internalType: "struct IERC721A.TokenOwnership[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "foldedFaces",
    outputs: [
      {
        internalType: "contract IERC721",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
    ],
    name: "foldedFacesMint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "entropy",
        type: "bytes",
      },
    ],
    name: "generateSeed",
    outputs: [
      {
        internalType: "uint24",
        name: "",
        type: "uint24",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "hasUsedFoldedFaces",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "holderPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastDispute",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "startTokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "quantity",
        type: "uint256",
      },
    ],
    name: "normalizeOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "numberMinted",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "publicPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renderer",
    outputs: [
      {
        internalType: "contract IRenderer",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "salePrice",
        type: "uint256",
      },
    ],
    name: "royaltyInfo",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "royaltyProvider",
    outputs: [
      {
        internalType: "contract IERC2981",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_baseTokenURI",
        type: "string",
      },
    ],
    name: "setBaseTokenURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint96",
        name: "_royaltyBasisPoints",
        type: "uint96",
      },
    ],
    name: "setDefaultRoyalty",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IRenderer",
        name: "_renderer",
        type: "address",
      },
    ],
    name: "setRenderer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC2981",
        name: "_royaltyProvider",
        type: "address",
      },
    ],
    name: "setRoyaltyProvider",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "tokensOfOwner",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "start",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "stop",
        type: "uint256",
      },
    ],
    name: "tokensOfOwnerIn",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalMinted",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "withdrawAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "withdrawAllERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC721",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "withdrawERC721",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60c060405234620000b1576060620035613881900390819060c0601f8301601f19168101906001600160401b03821190821017620000b6575b60405260c03912620000b1576200007a60c051620000568162000148565b60e051620000648162000148565b6101005191620000748362000148565b62000184565b604051612e2c908162000735823960805181818161074901528181610b1c0152611ac1015260a0518181816106e601526126dc0152f35b600080fd5b620000c0620000c6565b62000038565b50634e487b7160e01b600052604160045260246000fd5b604081019081106001600160401b03821117620000f957604052565b62000103620000c6565b604052565b606081019081106001600160401b03821117620000f957604052565b601f909101601f19168101906001600160401b03821190821017620000f957604052565b6001600160a01b03811603620000b157565b604051906200016982620000dd565b60158252565b604051906200017e82620000dd565b60138252565b6200018e6200015a565b6020907f412046756e64616d656e74616c2044697370757465000000000000000000000082820152620001c06200016f565b7f4146554e44414d454e54414c4449535055544500000000000000000000000000838201528151909290916001600160401b0383116200036b575b62000213836200020d6002546200037b565b620003b8565b81601f8411600114620002ce57509282620002ba95936200025993620002c0999896600092620002c2575b50508160011b916000199060031b1c1916176002556200046a565b620002646001600055565b6200026f33620006e6565b6101b46080527f5daa87a0e9463431830481fd4b6e3403442dfb9a12b9c07597e9f61d50b633c86000604051a1620002a643600f55565b620002b160da601055565b60a0526200056e565b6200056e565b565b0151905038806200023e565b60026000529190601f1984167f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace936000905b82821062000352575050936200025993620002c09998969360019383620002ba9a981062000338575b505050811b016002556200046a565b015160001960f88460031b161c1916905538808062000329565b8060018697829497870151815501960194019062000300565b62000375620000c6565b620001fb565b90600182811c92168015620003ad575b60208310146200039757565b634e487b7160e01b600052602260045260246000fd5b91607f16916200038b565b601f8111620003c5575050565b6000906002825260208220906020601f850160051c8301941062000406575b601f0160051c01915b828110620003fa57505050565b818155600101620003ed565b9092508290620003e4565b601f81116200041e575050565b6000906003825260208220906020601f850160051c830194106200045f575b601f0160051c01915b8281106200045357505050565b81815560010162000446565b90925082906200043d565b80519091906001600160401b0381116200055e575b6200049781620004916003546200037b565b62000411565b602080601f8311600114620004d65750819293600092620004ca575b50508160011b916000199060031b1c191617600355565b015190503880620004b3565b6003600052601f198316949091907fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b926000905b878210620005455750508360019596106200052b575b505050811b01600355565b015160001960f88460031b161c1916905538808062000520565b806001859682949686015181550195019301906200050a565b62000568620000c6565b6200047f565b600080549192916001600160a01b0384168015620006d857808352602060058152604080852068150000000000000015815401905580519685838901528382890152818852620005be8862000108565b60014310620006c45781518381014481526000194301408483015233606083015260808083015289518060a0840152885b818110620006af57899a9b509383620006698a97946200065660c060159e9b98876200067f987fdeaa91b6123d068f5821d0fb0678463d1a8a6079fe8af5de3ce5e896dcf9133d9c11620006a2575b601f801991011681010360a081018652018462000124565b62ffffff60e81b9251902062ffffff1690565b60e81b164260a01b179060018060a01b03161790565b62000694856000526004602052604060002090565b5551601484018152a4019055565b8d8382840101526200063e565b8b810187015184820160c001528601620005ef565b634e487b7160e01b86526011600452602486fd5b622e076360e81b8352600483fd5b600880546001600160a01b039283166001600160a01b031982168117909255604051919216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a356fe60806040526004361015610013575b600080fd5b60003560e01c806301ffc9a7146103ab57806306fdde03146103a2578063081812fc14610399578063095ea7b314610390578063105ea6d3146103875780631249c58b1461037e57806318160ddd1461037557806323b872dd1461036c5780632a55205a1461036357806330176e131461035a578063426edbaf1461035157806342842e0e1461034857806352f0832a1461033f57806355ea73281461033657806356d3163d1461032d57806359edf34e146103245780635bbb21771461031b5780635f7c7cca146103125780636352211e1461030957806370a0823114610300578063715018a6146102f75780637b9f76b5146102ee5780638462151c146102e557806386d6282c146102dc5780638ada6b0f146102d35780638da5cb5b146102ca57806395d89b41146102c157806399a2557a146102b8578063a22cb465146102af578063a2309ff8146102a6578063a945bf801461029d578063ae11c7f814610294578063aeb6c2331461028b578063b88d4fde14610282578063b9b8f4d814610279578063c23dc68f14610270578063c87b56dd14610267578063d4c5b2521461025e578063d547cfb714610255578063d5abeb011461024c578063d6948b7514610243578063dc33e6811461023a578063e985e9c514610231578063f2fde38b14610228578063fa09e6301461021f5763fe018d841461021757600080fd5b61000e611dff565b5061000e611d49565b5061000e611c79565b5061000e611c10565b5061000e611bc8565b5061000e611ae4565b5061000e611aa8565b5061000e611a12565b5061000e611931565b5061000e6118fd565b5061000e611899565b5061000e611851565b5061000e6117ff565b5061000e6117bc565b5061000e61156a565b5061000e611546565b5061000e611523565b5061000e61148d565b5061000e6112ed565b5061000e611245565b5061000e61121b565b5061000e6111f1565b5061000e6110b9565b5061000e611013565b5061000e610f31565b5061000e610ecf565b5061000e610e9f565b5061000e610e6f565b5061000e610e2c565b5061000e610d60565b5061000e610d36565b5061000e610c86565b5061000e610c62565b5061000e610be2565b5061000e610bbe565b5061000e610ae9565b5061000e6108e4565b5061000e6108a7565b5061000e610894565b5061000e610840565b5061000e610715565b5061000e6106cf565b5061000e610611565b5061000e6105ac565b5061000e6104cf565b5061000e6103c6565b6001600160e01b031981160361000e57565b503461000e57602036600319011261000e5760206004356103e6816103b4565b63ffffffff60e01b166301ffc9a760e01b81149081908215610450575b821561043f575b821561041d575b50506040519015158152f35b63152a902d60e11b1491508115610437575b503880610411565b90503861042f565b635b5e139f60e01b8114925061040a565b6380ac58cd60e01b81149250610403565b918091926000905b82821061048157501161047a575050565b6000910152565b91508060209183015181860152018291610469565b906020916104af81518092818552858086019101610461565b601f01601f1916010190565b9060206104cc928181520190610496565b90565b503461000e576000806003193601126105a95760405190806002546104f381611950565b80855291600191808316908115610588575060011461052d575b6105298561051d8187038261171b565b604051918291826104bb565b0390f35b9250600283527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace5b82841061057057505050810160200161051d8261052961050d565b80546020858701810191909152909301928101610555565b60ff19166020870152505060408401925061051d915083905061052961050d565b80fd5b503461000e57602036600319011261000e576004356105ca81611efb565b156105ef576000526006602052602060018060a01b0360406000205416604051908152f35b6333d1c03960e21b60005260046000fd5b6001600160a01b0381160361000e57565b50604036600319011261000e5760043561062a81610600565b6001600160a01b03906024358261064082611e58565b1680330361069d575b600082815260066020526040812080546001600160a01b0319166001600160a01b038616179055936040519316907f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258585a4f35b600081815260076020908152604080832033845290915290205460ff16610649576367d9dca160e11b60005260046000fd5b503461000e57600036600319011261000e576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b50600036600319011261000e576701aa535d3d0c0000803403610828576000546001199060001981019082821161081b575b7f0000000000000000000000000000000000000000000000000000000000000000918282116107e9573360009081526005602052604090819020546001600160401b03911c168481116107dc575b600260018201116107ab576107a9336124c5565b005b806024916002106107cf575b60405190637e0311c360e11b82526002036004820152fd5b6107d761247a565b6107b7565b6107e461247a565b610795565b82916001916024941061080e575b60405163cbbf111360e01b81529203016004820152fd5b61081661247a565b6107f7565b61082361247a565b610747565b6024906040519063b23bee0560e01b82526004820152fd5b503461000e57600036600319011261000e576000546001546040519103600019018152602090f35b606090600319011261000e5760043561088081610600565b9060243561088d81610600565b9060443590565b506107a96108a136610868565b91611f36565b503461000e57604036600319011261000e576108c7602435600435612bed565b604080516001600160a01b03939093168352602083019190915290f35b503461000e5760208060031936011261000e57600435906001600160401b0380831161000e573660238401121561000e57826004013590811161000e576024903682828601011161000e57610937612422565b60409283519484865261094b85870161198a565b938685038388015283855283818301848701377f19c1a81f34d9a8d208a44017474815e9089aff4b57e461c08509577eea2c3900600097888587890101528481601f199889601f8a011601030190a16000199283885401927f6bd5c950a8d8df17f772f5af37cb3655737899cbf903264b9795592da439661c88805160019687825285820152a16109e6866109e1600d54611950565b612d7c565b8891601f8711600114610a22575085965090859392918996610a15575b5050501b9260031b1c191617600d5551f35b0101359350388080610a03565b9490939686908116610a44600d600052600080516020612e0083398151915290565b968b905b8a838310610a815750505010610a67575b5050505050811b01600d5551f35b60f88660031b161c19920101351690553880808080610a59565b8887018801358a55909801979485019489935090810190610a48565b90602060031983011261000e576004356001600160401b039283821161000e578060238301121561000e57816004013593841161000e5760248460051b8301011161000e576024019190565b50610af336610a9d565b67011c37937e08000080340361082857506000546001199290600019810190848211610bb1575b7f0000000000000000000000000000000000000000000000000000000000000000918282116107e9575050336000908152600560205260409081902054901c6001600160401b03169050928311610ba4575b60026001840111610b81576107a992506126d1565b602483806002106107cf5760405190637e0311c360e11b82526002036004820152fd5b610bac61247a565b610b6c565b610bb961247a565b610b1a565b506107a9610bcb36610868565b9060405192610bd9846116e5565b60008452612104565b503461000e5760408060031936011261000e576024356004803560005b838110610c0857005b80610c3591198311610c55575b80830180600052846020818152886000205415610c3a575b50505061263c565b610bff565b610c4383611e58565b92600052528660002055388481610c2d565b610c5d61247a565b610c15565b503461000e57600036600319011261000e57602060405167011c37937e0800008152f35b503461000e57602036600319011261000e57600435610ca481610600565b610cac612422565b600c54604080516001600160a01b03808416825290931660208401819052927f10e9b6d73105db46c6a41a698f35efb8e1688178fe274b7b21f0bdc792de3ea59190a17f6bd5c950a8d8df17f772f5af37cb3655737899cbf903264b9795592da439661c604060001960005401815190600182526020820152a16001600160a01b03191617600c55005b503461000e57600036600319011261000e57600b546040516001600160a01b039091168152602090f35b503461000e57610d6f36610a9d565b906040519180835260051b9060209182818501016040525b80818015610dac57610da390601f19809101938501013561236f565b90850152610d87565b604080518681528751818801819052888801928201908860005b828110610dd35784840385f35b90919282608082610e1d6001948a5162ffffff6060809260018060a01b0381511685526001600160401b036020820151166020860152604081015115156040860152015116910152565b01960191019492919094610dc6565b503461000e57602036600319011261000e576020610e6560043560ff6001918060081c600052600e602052161b60406000205416151590565b6040519015158152f35b503461000e57602036600319011261000e5760206001600160a01b03610e96600435611e58565b16604051908152f35b503461000e57602036600319011261000e576020610ec7600435610ec281610600565b611e1e565b604051908152f35b503461000e576000806003193601126105a957610eea612422565b600880546001600160a01b031981169091556040519082906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08284a3f35b503461000e57600060603660031901126105a957600435610f5181610600565b8160443591610f5f83610600565b610f67612422565b6001600160a01b0390811692833b15610fd457606490836040519586948593632142170760e11b855230600486015216602484015260243560448401525af18015610fc7575b610fb8575b50604051f35b610fc1906116aa565b38610fb2565b610fcf6121b8565b610fad565b8280fd5b6020908160408183019282815285518094520193019160005b828110610fff575050505090565b835185529381019392810192600101610ff1565b503461000e57602036600319011261000e5760043561103181610600565b61103a81611e1e565b6040805191600193600590858301821b8501845282855260009081875b85840361106b578651806105298a82610fd8565b806110768a926123c4565b8881015115611087575b5001611057565b51806110b1575b5083831860601b156110a1575b38611080565b938101938085871b8a015261109b565b92503861108e565b503461000e57602036600319011261000e5760043560105480156111bc577ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce79161115f61115a6111b79361111c610884611115600f54436124ae565b101561293a565b61112d61112885611efb565b612986565b61115561114e61114261114261114288611e58565b6001600160a01b031690565b33146129c9565b612491565b601055565b61116843600f55565b6010546040805160208101849052908101919091526111a7906111a19061119c81606081015b03601f19810183528261171b565b612881565b82612a06565b6040519081529081906020820190565b0390a1005b60405162461bcd60e51b815260206004820152600d60248201526c43616e2774206469737075746560981b6044820152606490fd5b503461000e57600036600319011261000e57600c546040516001600160a01b039091168152602090f35b503461000e57600036600319011261000e576008546040516001600160a01b039091168152602090f35b503461000e576000806003193601126105a957604051908060035461126981611950565b808552916001918083169081156105885750600114611292576105298561051d8187038261171b565b9250600383527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b5b8284106112d557505050810160200161051d8261052961050d565b805460208587018101919091529093019281016112ba565b503461000e5760608060031936011261000e5760043561130c81610600565b6024356044359080829483831015611476575b600180931061146e575b600093845480911015611466575b50809461134381611e1e565b878410028061135b575b604051806105298982610fd8565b909192809495965087038181111561145e575b50604080519686830160051b880182526113878661236f565b92819361139d61139985830151151590565b1590565b61144c575b5081999796999787805b6113cc575b5050505050505050506105299250815238808080808061134d565b9998991561142b575b826113df8c6123c4565b85810151156113f7575b5088809a9b9c019b996113ac565b5180611423575b50868618881b15611410575b386113e9565b998801600581901b8a018c90529961140a565b9550386113fe565b808b148015611443575b156113d557809998996113b1565b50818a14611435565b516001600160a01b03169350386113a2565b90503861136e565b955038611337565b829150611329565b61147e6122b7565b61131f565b8015150361000e57565b503461000e57604036600319011261000e576004356114ab81610600565b602435906114b882611483565b3360009081526007602090815260408083206001600160a01b038516845290915290209115159160ff1981541660ff841617905560405191825260018060a01b0316907f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160203392a3005b503461000e57600036600319011261000e57602060001960005401604051908152f35b503461000e57600036600319011261000e5760206040516701aa535d3d0c00008152f35b503461000e57604036600319011261000e5760043561158881610600565b6116136024359161159883610600565b6115a0612422565b6040516370a0823160e01b815230600482015260209384926001600160a01b0316908383602481855afa928315611686575b600093611657575b5060405163a9059cbb60e01b81526001600160a01b03909116600482015260248101929092529092839190829060009082906044820190565b03925af1801561164a575b61162457005b816107a992903d10611643575b61163b818361171b565b810190612dea565b503d611631565b6116526121b8565b61161e565b611678919350843d861161167f575b611670818361171b565b810190612ddb565b91386115da565b503d611666565b61168e6121b8565b6115d2565b50634e487b7160e01b600052604160045260246000fd5b6001600160401b0381116116bd57604052565b6116c5611693565b604052565b604081019081106001600160401b038211176116bd57604052565b602081019081106001600160401b038211176116bd57604052565b606081019081106001600160401b038211176116bd57604052565b90601f801991011681019081106001600160401b038211176116bd57604052565b60405190611749826116ca565b565b6020906001600160401b038111611768575b601f01601f19160190565b611770611693565b61175d565b81601f8201121561000e5780359061178c8261174b565b9261179a604051948561171b565b8284526020838301011161000e57816000926020809301838601378301015290565b503461000e57602036600319011261000e576004356001600160401b03811161000e576117f261119c6020923690600401611775565b62ffffff60405191168152f35b50608036600319011261000e5760043561181881610600565b60243561182481610600565b606435916001600160401b03831161000e576118476107a9933690600401611775565b9160443591612104565b503461000e57602036600319011261000e5760043561186f81610600565b611877612422565b600b80546001600160a01b0319166001600160a01b0392909216919091179055005b503461000e57602036600319011261000e5760806118b860043561236f565b6118fb604051809262ffffff6060809260018060a01b0381511685526001600160401b036020820151166020860152604081015115156040860152015116910152565bf35b503461000e57602036600319011261000e5761052961191d600435612a44565b604051918291602083526020830190610496565b503461000e57600036600319011261000e576020601054604051908152f35b90600182811c92168015611980575b602083101461196a57565b634e487b7160e01b600052602260045260246000fd5b91607f169161195f565b600d546000929161199a82611950565b808252916001908181169081156119ff57506001146119b857505050565b91929350600d600052600080516020612e00833981519152916000925b8484106119e757505060209250010190565b805460208585018101919091529093019281016119d5565b60ff191660208401525050604001925050565b503461000e576000806003193601126105a9576040519080600d54611a3681611950565b808552916001918083169081156105885750600114611a5f576105298561051d8187038261171b565b9250600d8352600080516020612e008339815191525b828410611a9057505050810160200161051d8261052961050d565b80546020858701810191909152909301928101611a75565b503461000e57600036600319011261000e5760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b503461000e57602036600319011261000e576004356001600160601b03811680820361000e5761271090611b16612422565b11611b70576107a990611b2a301515612d30565b611b49611b3561173c565b308152916001600160601b03166020830152565b805160209091015160a01b6001600160a01b0319166001600160a01b039190911617600955565b60405162461bcd60e51b815260206004820152602a60248201527f455243323938313a20726f79616c7479206665652077696c6c206578636565646044820152692073616c65507269636560b01b6064820152608490fd5b503461000e57602036600319011261000e576020610ec7600435611beb81610600565b60018060a01b031660005260056020526001600160401b0360406000205460401c1690565b503461000e57604036600319011261000e57602060ff611c6d600435611c3581610600565b60243590611c4282610600565b60018060a01b03166000526007845260406000209060018060a01b0316600052602052604060002090565b54166040519015158152f35b503461000e57602036600319011261000e57600435611c9781610600565b611c9f612422565b6001600160a01b03908116908115611cf55760009160085491816001600160601b0360a01b84161760085560405192167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08484a3f35b60405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b503461000e57602036600319011261000e57600435611d6781610600565b611d6f612422565b4715611dcb57600080809247604051915af1611d896121c5565b5015611d9157005b60405162461bcd60e51b81526020600482015260126024820152714661696c656420746f20776974686472617760701b6044820152606490fd5b60405162461bcd60e51b815260206004820152600c60248201526b5a65726f2062616c616e636560a01b6044820152606490fd5b503461000e57600036600319011261000e576020600f54604051908152f35b6001600160a01b03168015611e475760005260056020526001600160401b036040600020541690565b6323d3ad8160e21b60005260046000fd5b60009060019080821115611e76575b636f96cda160e11b8352600483fd5b8083526004602052604083205491600160e01b831615611e965750611e67565b9091928315611ea6575b50505090565b8054831015611eec575090815b611ebd5780611ea0565b90915060001901611ed8816000526004602052604060002090565b54918215611ee557505090565b9081611eb3565b636f96cda160e11b8152600490fd5b80600111159081611f2a575b81611f10575090565b90506000526004602052600160e01b604060002054161590565b60005481109150611f07565b919091611f4282611e58565b6001600160a01b0391821693908281168590036120f7575b60008481526006602052604090208054611f836001600160a01b03881633908114908314171590565b6120a1575b612097575b506001600160a01b038581166000908152600560205260408082208054600019019055918416815220805460010190556001600160e81b0319611fd560e883901c84886128ff565b60e81b16611ff8600160e11b91821784904260a01b179060018060a01b03161790565b61200c866000526004602052604060002090565b5581161561204d575b501680927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef600080a41561204557565b6117496122ec565b60018401612065816000526004602052604060002090565b5415612072575b50612015565b600054811461206c5761208f906000526004602052604060002090565b55388061206c565b6000905538611f8d565b6120e56113996120de336120c78b60018060a01b03166000526007602052604060002090565b9060018060a01b0316600052602052604060002090565b5460ff1690565b15611f88576120f26122da565b611f88565b6120ff6122c9565b611f5a565b929190612112828286611f36565b803b61211f575b50505050565b6121289361228e565b156121365738808080612119565b6368d2bf6b60e11b60005260046000fd5b9081602091031261000e57516104cc816103b4565b6104cc939260809260018060a01b031682526000602083015260408201528160608201520190610496565b6001600160a01b0391821681529116602082015260408101919091526080606082018190526104cc92910190610496565b506040513d6000823e3d90fd5b3d156121f0573d906121d68261174b565b916121e4604051938461171b565b82523d6000602084013e565b606090565b61221e60209160009394604051948580948193630a85bd0160e11b998a8452336004850161215c565b03926001600160a01b03165af16000918161225e575b50612250576122416121c5565b80511561213657805190602001fd5b6001600160e01b0319161490565b61228091925060203d8111612287575b612278818361171b565b810190612147565b9038612234565b503d61226e565b9260209161221e936000604051809681958294630a85bd0160e11b9a8b85523360048601612187565b50631960ccad60e11b60005260046000fd5b5062a1148160e81b60005260046000fd5b50632ce44b5f60e11b60005260046000fd5b50633a954ecd60e21b60005260046000fd5b506368d2bf6b60e11b60005260046000fd5b50622e076360e81b60005260046000fd5b506000805260046000fd5b60405190608082018281106001600160401b03821117612362575b60405260006060838281528260208201528260408201520152565b61236a611693565b612347565b9061237861232c565b916001811015612386575b50565b60005481106123925750565b915061239d826123c4565b916040830151612383576104cc9192506123bf906123b961232c565b50611e58565b6123df565b6123cc61232c565b5060005260046020526104cc6040600020545b906123e861232c565b6001600160a01b038316815260a083901c6001600160401b03166020820152600160e01b83161515604082015260e89290921c6060830152565b6008546001600160a01b0316330361243657565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b50634e487b7160e01b600052601160045260246000fd5b600181106124a1575b6000190190565b6124a961247a565b61249a565b8181106124b9570390565b6124c161247a565b0390565b6040516124d1816116e5565b600090818152815461250f62ffffff60e81b6124ec866128d6565b6001600160a01b0387164260a01b60e89290921b929092161717600160e11b1790565b612523826000526004602052604060002090565b556001600160a01b038416600081815260056020526040902080546801000000000000000101905593841561262f575b6001918281019581908480805b6125e0575b50505050858555813b61257b575b505050505050565b9180805b6125a8575b5050505050540361259b575b388080808080612573565b6125a3612321565b612590565b156125d3575b84816125c16113998783880197876121f5565b1561257f576125ce6122fe565b61257f565b8583106125ae5780612584565b15612617575b50868583838a7fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8180a49081612560565b9091019087821461262857846125e6565b8481612565565b612637612310565b612553565b600190600019811461264c570190565b61265461247a565b0190565b91908110156126685760051b0190565b634e487b7160e01b600052603260045260246000fd5b9081602091031261000e57516104cc81610600565b6001600160a01b03909116815260406020820181905281018390526001600160fb1b03831161000e5760609260051b80928483013701016000815290565b916001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116929160009182905b84841061272d5760405163039e5b7760e51b815280612729878a8a60048501612693565b0390fd5b61273f84868995989699979497612658565b35946127648660ff6001918060081c600052600e602052161b60406000205416151590565b61287157604080516331a9108f60e11b81526004810188905290989060209081816024818b5afa918215612864575b8492612837575b5050833391160361281f5750505050506128137f3626b5db6ac6441079214cae6a8c3aaaa1681a609a0b424772b5b4f5297a114f93946127f3848060081c600052600e602052600160ff604060002092161b8154179055565b516001600160a01b03909216825260208201929092529081906040820190565b0390a1611749336124c5565b9092955061283191949693975061263c565b92612705565b6128569250803d1061285d575b61284e818361171b565b81019061267e565b388061279a565b503d612844565b61286c6121b8565b612793565b919450929491956128319061263c565b62ffffff90600143106128c9575b6040516128c28161118e6020820194448652600019430140604084015233606084015260808084015260a0830190610496565b5190201690565b6128d161247a565b61288f565b60408051600060208201526001600160a01b039092168282015281526104cc9061119c81611700565b62ffffff831661293557604080516001600160a01b039283166020820152929091168282015281526104cc915061119c81611700565b505090565b1561294157565b60405162461bcd60e51b815260206004820152601b60248201527f4c61737420646973707574652077617320746f6f20726563656e7400000000006044820152606490fd5b1561298d57565b60405162461bcd60e51b8152602060048201526014602482015273151bdad95b88191bd95cc81b9bdd08195e1a5cdd60621b6044820152606490fd5b156129d057565b60405162461bcd60e51b815260206004820152600e60248201526d2737ba103cb7bab9103a37b5b2b760911b6044820152606490fd5b60009181835260046020526040832054918215612a36579060409291845260e81b9060018060e81b031617912055565b62d5815360e01b8452600484fd5b600c546001600160a01b03169081612a60576104cc9150612b2c565b60405191829163c87b56dd60e01b8352600483015281602460009485935afa918215612b0c575b8092612a9257505090565b9091503d8082843e612aa4818461171b565b820191602081840312612b08578051906001600160401b038211610fd4570182601f82011215612b0857805191612ada8361174b565b93612ae8604051958661171b565b838552602084840101116105a95750906104cc9160208085019101610461565b5080fd5b612b146121b8565b612a87565b9061265460209282815194859201610461565b612b3581611efb565b15612bdc5760405190612b5282612b4b8161198a565b038361171b565b815160009015612bc757506040519060a08201604052608082019060008252905b6000190190600a906030828206018353049081612b73579050612bb592612bbb6104cc936080601f199485810192030181526040519586936020850190612b19565b90612b19565b0390810183528261171b565b91505060405190612bd7826116e5565b815290565b630a14c4b560e41b60005260046000fd5b600b549192916001600160a01b039190821680612ca457509061271091600052600a60205260406000209060405191612c25836116ca565b54918183169283825260a01c60208201529115612c80575b50612c6d6001600160601b03602083015116918560001904831186151516612c73575b516001600160a01b031690565b93020490565b612c7b61247a565b612c60565b6040519150612c8e826116ca565b600954908116825260a01c602082015238612c3d565b6040805163152a902d60e11b81526004810193909352602483019590955290939150839060449082905afa918215612d23575b6000908193612ce557509190565b92506040833d8211612d1b575b81612cff6040938361171b565b810103126105a957506020825192612d1684610600565b015190565b3d9150612cf2565b612d2b6121b8565b612cd7565b15612d3757565b60405162461bcd60e51b815260206004820152601960248201527f455243323938313a20696e76616c6964207265636569766572000000000000006044820152606490fd5b601f8111612d88575050565b600090600d8252600080516020612e00833981519152906020601f850160051c83019410612dd1575b601f0160051c01915b828110612dc657505050565b818155600101612dba565b9092508290612db1565b9081602091031261000e575190565b9081602091031261000e57516104cc8161148356fed7b6990105719101dabeb77144f2a3385c8033acd3af97e9423a695e81ad1eb5a164736f6c634300080d000a";

type AFundamentalDisputeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AFundamentalDisputeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AFundamentalDispute__factory extends ContractFactory {
  constructor(...args: AFundamentalDisputeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _foldedFaces: PromiseOrValue<string>,
    artist: PromiseOrValue<string>,
    developer: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<AFundamentalDispute> {
    return super.deploy(
      _foldedFaces,
      artist,
      developer,
      overrides || {}
    ) as Promise<AFundamentalDispute>;
  }
  override getDeployTransaction(
    _foldedFaces: PromiseOrValue<string>,
    artist: PromiseOrValue<string>,
    developer: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _foldedFaces,
      artist,
      developer,
      overrides || {}
    );
  }
  override attach(address: string): AFundamentalDispute {
    return super.attach(address) as AFundamentalDispute;
  }
  override connect(signer: Signer): AFundamentalDispute__factory {
    return super.connect(signer) as AFundamentalDispute__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AFundamentalDisputeInterface {
    return new utils.Interface(_abi) as AFundamentalDisputeInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AFundamentalDispute {
    return new Contract(address, _abi, signerOrProvider) as AFundamentalDispute;
  }
}
