/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  AFundamentalDispute,
  AFundamentalDisputeInterface,
} from "../../AFD.sol/AFundamentalDispute";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IERC721",
        name: "_foldedFaces",
        type: "address",
      },
      {
        internalType: "address",
        name: "artist",
        type: "address",
      },
      {
        internalType: "address",
        name: "developer",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ApprovalCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "ApprovalQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "BalanceQueryForZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidQueryRange",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "mintsLeft",
        type: "uint256",
      },
    ],
    name: "MaxSupplyExceeded",
    type: "error",
  },
  {
    inputs: [],
    name: "MintERC2309QuantityExceedsLimit",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "mintsLeft",
        type: "uint256",
      },
    ],
    name: "MintLimitExceeded",
    type: "error",
  },
  {
    inputs: [],
    name: "MintToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "MintZeroQuantity",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
    ],
    name: "NoValidTokenDiscount",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnerQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnershipNotInitializedForExtraData",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferFromIncorrectOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToNonERC721ReceiverImplementer",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "URIQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "expectedPayment",
        type: "uint256",
      },
    ],
    name: "WrongPayment",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "previousBaseTokenURI",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "newBaseTokenURI",
        type: "string",
      },
    ],
    name: "BaseTokenURIUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_fromTokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_toTokenId",
        type: "uint256",
      },
    ],
    name: "BatchMetadataUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "fromTokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "toTokenId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "ConsecutiveTransfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "MetadataUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "contract IRenderer",
        name: "previousRenderer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "contract IRenderer",
        name: "newRenderer",
        type: "address",
      },
    ],
    name: "RendererUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "TokenDiscountUsed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseTokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "explicitOwnershipOf",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "addr",
            type: "address",
          },
          {
            internalType: "uint64",
            name: "startTimestamp",
            type: "uint64",
          },
          {
            internalType: "bool",
            name: "burned",
            type: "bool",
          },
          {
            internalType: "uint24",
            name: "extraData",
            type: "uint24",
          },
        ],
        internalType: "struct IERC721A.TokenOwnership",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
    ],
    name: "explicitOwnershipsOf",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "addr",
            type: "address",
          },
          {
            internalType: "uint64",
            name: "startTimestamp",
            type: "uint64",
          },
          {
            internalType: "bool",
            name: "burned",
            type: "bool",
          },
          {
            internalType: "uint24",
            name: "extraData",
            type: "uint24",
          },
        ],
        internalType: "struct IERC721A.TokenOwnership[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "foldedFaces",
    outputs: [
      {
        internalType: "contract IERC721",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
    ],
    name: "foldedFacesMint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "hasUsedFoldedFaces",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "holderPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "startTokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "quantity",
        type: "uint256",
      },
    ],
    name: "normalizeOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "numberMinted",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "publicPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renderer",
    outputs: [
      {
        internalType: "contract IRenderer",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "salePrice",
        type: "uint256",
      },
    ],
    name: "royaltyInfo",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "royaltyProvider",
    outputs: [
      {
        internalType: "contract IERC2981",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_baseTokenURI",
        type: "string",
      },
    ],
    name: "setBaseTokenURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint96",
        name: "_royaltyBasisPoints",
        type: "uint96",
      },
    ],
    name: "setDefaultRoyalty",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IRenderer",
        name: "_renderer",
        type: "address",
      },
    ],
    name: "setRenderer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC2981",
        name: "_royaltyProvider",
        type: "address",
      },
    ],
    name: "setRoyaltyProvider",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "tokensOfOwner",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "start",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "stop",
        type: "uint256",
      },
    ],
    name: "tokensOfOwnerIn",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalMinted",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "withdrawAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "withdrawAllERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC721",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "withdrawERC721",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60c080604052346200009e576060816200321c8038038091620000238285620000e5565b8339810103126200009e5780516200006791620000408262000109565b6040602082015191620000538362000109565b015191620000618362000109565b62000145565b604051612b83908162000699823960805181818161071401528181610ae701526117f6015260a0518181816106b1015261252d0152f35b600080fd5b50634e487b7160e01b600052604160045260246000fd5b604081019081106001600160401b03821117620000d657604052565b620000e0620000a3565b604052565b601f909101601f19168101906001600160401b03821190821017620000d657604052565b6001600160a01b038116036200009e57565b604051906200012a82620000ba565b60158252565b604051906200013f82620000ba565b60138252565b6200014f6200011b565b6020907f412046756e64616d656e74616c20446973707574650000000000000000000000828201526200018162000130565b7f4146554e44414d454e54414c4449535055544500000000000000000000000000838201528151909290916001600160401b03831162000317575b620001d483620001ce60025462000327565b62000364565b81601f84116001146200027a575092826200026695936200021a936200026c9998966000926200026e575b50508160011b916000199060031b1c19161760025562000416565b620002256001600055565b62000230336200064a565b6101b46080527f5daa87a0e9463431830481fd4b6e3403442dfb9a12b9c07597e9f61d50b633c86000604051a160a0526200051a565b6200051a565b565b015190503880620001ff565b60026000529190601f1984167f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace936000905b828210620002fe575050936200021a936200026c9998969360019383620002669a9810620002e4575b505050811b0160025562000416565b015160001960f88460031b161c19169055388080620002d5565b80600186978294978701518155019601940190620002ac565b62000321620000a3565b620001bc565b90600182811c9216801562000359575b60208310146200034357565b634e487b7160e01b600052602260045260246000fd5b91607f169162000337565b601f811162000371575050565b6000906002825260208220906020601f850160051c83019410620003b2575b601f0160051c01915b828110620003a657505050565b81815560010162000399565b909250829062000390565b601f8111620003ca575050565b6000906003825260208220906020601f850160051c830194106200040b575b601f0160051c01915b828110620003ff57505050565b818155600101620003f2565b9092508290620003e9565b80519091906001600160401b0381116200050a575b62000443816200043d60035462000327565b620003bd565b602080601f831160011462000482575081929360009262000476575b50508160011b916000199060031b1c191617600355565b0151905038806200045f565b6003600052601f198316949091907fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b926000905b878210620004f1575050836001959610620004d7575b505050811b01600355565b015160001960f88460031b161c19169055388080620004cc565b80600185968294968601518155019501930190620004b6565b62000514620000a3565b6200042b565b6000805490916001600160a01b038116908115620006395781845260056020526040842068150000000000000015815401905560014310620006255790620005cb60159392604051620005b56020820144815260001943014060408401528860608401528560808401526080835260a0830183811060018060401b0382111762000615575b60405262ffffff60e81b9251902062ffffff1690565b60e81b164260a01b179060018060a01b03161790565b620005e0836000526004602052604060002090565b5583827fdeaa91b6123d068f5821d0fb0678463d1a8a6079fe8af5de3ce5e896dcf9133d6020604051601484018152a4019055565b6200061f620000a3565b6200059f565b634e487b7160e01b84526011600452602484fd5b604051622e076360e81b8152600490fd5b600880546001600160a01b039283166001600160a01b031982168117909255604051919216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a356fe60806040526004361015610013575b600080fd5b60003560e01c806301ffc9a71461035b57806306fdde0314610352578063081812fc14610349578063095ea7b314610340578063105ea6d3146103375780631249c58b1461032e57806318160ddd1461032557806323b872dd1461031c5780632a55205a1461031357806330176e131461030a578063426edbaf1461030157806342842e0e146102f857806352f0832a146102ef57806355ea7328146102e657806356d3163d146102dd57806359edf34e146102d45780635bbb2177146102cb5780635f7c7cca146102c25780636352211e146102b957806370a08231146102b0578063715018a6146102a75780637b9f76b51461029e5780638462151c146102955780638ada6b0f1461028c5780638da5cb5b1461028357806395d89b411461027a57806399a2557a14610271578063a22cb46514610268578063a2309ff81461025f578063a945bf8014610256578063ae11c7f81461024d578063b88d4fde14610244578063b9b8f4d81461023b578063c23dc68f14610232578063c87b56dd14610229578063d547cfb714610220578063d5abeb0114610217578063d6948b751461020e578063dc33e68114610205578063e985e9c5146101fc578063f2fde38b146101f35763fa09e630146101eb57600080fd5b61000e611a7e565b5061000e6119ae565b5061000e611945565b5061000e6118fd565b5061000e611819565b5061000e6117dd565b5061000e611747565b5061000e611651565b5061000e6115ed565b5061000e6115a5565b5061000e611519565b5061000e61130e565b5061000e6112ea565b5061000e6112c7565b5061000e611231565b5061000e6111ea565b5061000e611142565b5061000e611118565b5061000e6110ee565b5061000e611035565b5061000e610f53565b5061000e610ef1565b5061000e610ec1565b5061000e610e91565b5061000e610e4e565b5061000e610da9565b5061000e610d01565b5061000e610c51565b5061000e610c2d565b5061000e610bad565b5061000e610b89565b5061000e610ab4565b5061000e6108af565b5061000e610872565b5061000e61085f565b5061000e61080b565b5061000e6106e0565b5061000e61069a565b5061000e6105c2565b5061000e61055c565b5061000e61047f565b5061000e610376565b6001600160e01b031981160361000e57565b503461000e57602036600319011261000e57602060043561039681610364565b63ffffffff60e01b166301ffc9a760e01b81149081908215610400575b82156103ef575b82156103cd575b50506040519015158152f35b63152a902d60e11b14915081156103e7575b5038806103c1565b9050386103df565b635b5e139f60e01b811492506103ba565b6380ac58cd60e01b811492506103b3565b918091926000905b82821061043157501161042a575050565b6000910152565b91508060209183015181860152018291610419565b9060209161045f81518092818552858086019101610411565b601f01601f1916010190565b90602061047c928181520190610446565b90565b503461000e576000806003193601126105595760405190806002546104a381611685565b8085529160019180831690811561053857506001146104dd575b6104d9856104cd818703826114bf565b6040519182918261046b565b0390f35b9250600283527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace5b8284106105205750505081016020016104cd826104d96104bd565b80546020858701810191909152909301928101610505565b60ff1916602087015250506040840192506104cd91508390506104d96104bd565b80fd5b503461000e57602036600319011261000e5760043561057a81611c05565b1561059f576000526006602052602060018060a01b0360406000205416604051908152f35b6040516333d1c03960e21b8152600490fd5b6001600160a01b0381160361000e57565b50604036600319011261000e576004356105db816105b1565b6001600160a01b0390602435826105f182611b6f565b1691823303610649575b600093828552600660205260408520911690816001600160601b0360a01b825416179055604051927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258585a4f35b60ff6106823361066b8660018060a01b03166000526007602052604060002090565b9060018060a01b0316600052602052604060002090565b54166105fb576040516367d9dca160e11b8152600490fd5b503461000e57600036600319011261000e576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b50600036600319011261000e5767016345785d8a00008034036107f357600054600119906000198101908282116107e6575b7f0000000000000000000000000000000000000000000000000000000000000000918282116107b4573360009081526005602052604090819020546001600160401b03911c168481116107a7575b600260018201116107765761077433612348565b005b8060249160021061079a575b60405190637e0311c360e11b82526002036004820152fd5b6107a2612331565b610782565b6107af612331565b610760565b8291600191602494106107d9575b60405163cbbf111360e01b81529203016004820152fd5b6107e1612331565b6107c2565b6107ee612331565b610712565b6024906040519063b23bee0560e01b82526004820152fd5b503461000e57600036600319011261000e576000546001546040519103600019018152602090f35b606090600319011261000e5760043561084b816105b1565b90602435610858816105b1565b9060443590565b5061077461086c36610833565b91611c40565b503461000e57604036600319011261000e57610892602435600435612938565b604080516001600160a01b03939093168352602083019190915290f35b503461000e5760208060031936011261000e57600435906001600160401b0380831161000e573660238401121561000e57826004013590811161000e576024903682828601011161000e576109026122d9565b6040928351948486526109168587016116bf565b938685038388015283855283818301848701377f19c1a81f34d9a8d208a44017474815e9089aff4b57e461c08509577eea2c3900600097888587890101528481601f199889601f8a011601030190a16000199283885401927f6bd5c950a8d8df17f772f5af37cb3655737899cbf903264b9795592da439661c88805160019687825285820152a16109b1866109ac600d54611685565b612ad3565b8891601f87116001146109ed5750859650908593929189966109e0575b5050501b9260031b1c191617600d5551f35b01013593503880806109ce565b9490939686908116610a0f600d600052600080516020612b5783398151915290565b968b905b8a838310610a4c5750505010610a32575b5050505050811b01600d5551f35b60f88660031b161c19920101351690553880808080610a24565b8887018801358a55909801979485019489935090810190610a13565b90602060031983011261000e576004356001600160401b039283821161000e578060238301121561000e57816004013593841161000e5760248460051b8301011161000e576024019190565b50610abe36610a68565b67011c37937e0800008034036107f357506000546001199290600019810190848211610b7c575b7f0000000000000000000000000000000000000000000000000000000000000000918282116107b4575050336000908152600560205260409081902054901c6001600160401b03169050928311610b6f575b60026001840111610b4c576107749250612522565b6024838060021061079a5760405190637e0311c360e11b82526002036004820152fd5b610b77612331565b610b37565b610b84612331565b610ae5565b50610774610b9636610833565b9060405192610ba484611489565b60008452611e1a565b503461000e5760408060031936011261000e576024356004803560005b838110610bd357005b80610c0091198311610c20575b80830180600052846020818152886000205415610c05575b5050506124b3565b610bca565b610c0e83611b6f565b92600052528660002055388481610bf8565b610c28612331565b610be0565b503461000e57600036600319011261000e57602060405167011c37937e0800008152f35b503461000e57602036600319011261000e57600435610c6f816105b1565b610c776122d9565b600c54604080516001600160a01b03808416825290931660208401819052927f10e9b6d73105db46c6a41a698f35efb8e1688178fe274b7b21f0bdc792de3ea59190a17f6bd5c950a8d8df17f772f5af37cb3655737899cbf903264b9795592da439661c604060001960005401815190600182526020820152a16001600160a01b03191617600c55005b503461000e57600036600319011261000e57600b546040516001600160a01b039091168152602090f35b6020908160408183019282815285518094520193019160005b828110610d52575050505090565b9091929382608082610d9d600194895162ffffff6060809260018060a01b0381511685526001600160401b036020820151166020860152604081015115156040860152015116910152565b01950193929101610d44565b503461000e57610db836610a68565b90610dc2826120de565b91610dd060405193846114bf565b808352601f19610ddf826120de565b0160005b818110610e3757505060005b818103610e0457604051806104d98682610d2b565b80610e1b610e15600193858761211b565b35612021565b610e258287612133565b52610e308186612133565b5001610def565b602090610e42611fde565b82828801015201610de3565b503461000e57602036600319011261000e576020610e8760043560ff6001918060081c600052600e602052161b60406000205416151590565b6040519015158152f35b503461000e57602036600319011261000e5760206001600160a01b03610eb8600435611b6f565b16604051908152f35b503461000e57602036600319011261000e576020610ee9600435610ee4816105b1565b611b34565b604051908152f35b503461000e5760008060031936011261055957610f0c6122d9565b600880546001600160a01b031981169091556040519082906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08284a3f35b503461000e576000606036600319011261055957600435610f73816105b1565b8160443591610f81836105b1565b610f896122d9565b6001600160a01b0390811692833b15610ff657606490836040519586948593632142170760e11b855230600486015216602484015260243560448401525af18015610fe9575b610fda575b50604051f35b610fe39061144e565b38610fd4565b610ff1611ecf565b610fcf565b8280fd5b6020908160408183019282815285518094520193019160005b828110611021575050505090565b835185529381019392810192600101611013565b503461000e57602036600319011261000e57600435611053816105b1565b6000809161106081611b34565b61106981612155565b92611072611fde565b506001926001600160a01b0390811690845b84840361109957604051806104d98982610ffa565b816110a382612080565b8760408201516110e557505116806110dd575b50859083838a16146110c9575b01611084565b806110d7838701968a612133565b526110c3565b9750856110b6565b929150506110c3565b503461000e57600036600319011261000e57600c546040516001600160a01b039091168152602090f35b503461000e57600036600319011261000e576008546040516001600160a01b039091168152602090f35b503461000e5760008060031936011261055957604051908060035461116681611685565b80855291600191808316908115610538575060011461118f576104d9856104cd818703826114bf565b9250600383527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b5b8284106111d25750505081016020016104cd826104d96104bd565b805460208587018101919091529093019281016111b7565b503461000e57606036600319011261000e576104d961121b60043561120e816105b1565b6044359060243590612187565b60405191829182610ffa565b8015150361000e57565b503461000e57604036600319011261000e5760043561124f816105b1565b6024359061125c82611227565b3360009081526007602090815260408083206001600160a01b038516845290915290209115159160ff1981541660ff841617905560405191825260018060a01b0316907f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160203392a3005b503461000e57600036600319011261000e57602060001960005401604051908152f35b503461000e57600036600319011261000e57602060405167016345785d8a00008152f35b503461000e57604036600319011261000e5760043561132c816105b1565b6113b76024359161133c836105b1565b6113446122d9565b6040516370a0823160e01b815230600482015260209384926001600160a01b0316908383602481855afa92831561142a575b6000936113fb575b5060405163a9059cbb60e01b81526001600160a01b03909116600482015260248101929092529092839190829060009082906044820190565b03925af180156113ee575b6113c857005b8161077492903d106113e7575b6113df81836114bf565b810190612b41565b503d6113d5565b6113f6611ecf565b6113c2565b61141c919350843d8611611423575b61141481836114bf565b810190612b32565b913861137e565b503d61140a565b611432611ecf565b611376565b50634e487b7160e01b600052604160045260246000fd5b6001600160401b03811161146157604052565b611469611437565b604052565b604081019081106001600160401b0382111761146157604052565b602081019081106001600160401b0382111761146157604052565b60a081019081106001600160401b0382111761146157604052565b90601f801991011681019081106001600160401b0382111761146157604052565b604051906114ed8261146e565b565b6020906001600160401b03811161150c575b601f01601f19160190565b611514611437565b611501565b50608036600319011261000e57600435611532816105b1565b60243561153e816105b1565b606435916001600160401b03831161000e573660238401121561000e5782600401359161156a836114ef565b9261157860405194856114bf565b808452366024828701011161000e5760208160009260246107749801838801378501015260443591611e1a565b503461000e57602036600319011261000e576004356115c3816105b1565b6115cb6122d9565b600b80546001600160a01b0319166001600160a01b0392909216919091179055005b503461000e57602036600319011261000e57608061160c600435612021565b61164f604051809262ffffff6060809260018060a01b0381511685526001600160401b036020820151166020860152604081015115156040860152015116910152565bf35b503461000e57602036600319011261000e576104d961167160043561278e565b604051918291602083526020830190610446565b90600182811c921680156116b5575b602083101461169f57565b634e487b7160e01b600052602260045260246000fd5b91607f1691611694565b600d54600092916116cf82611685565b8082529160019081811690811561173457506001146116ed57505050565b91929350600d600052600080516020612b57833981519152916000925b84841061171c57505060209250010190565b8054602085850181019190915290930192810161170a565b60ff191660208401525050604001925050565b503461000e57600080600319360112610559576040519080600d5461176b81611685565b808552916001918083169081156105385750600114611794576104d9856104cd818703826114bf565b9250600d8352600080516020612b578339815191525b8284106117c55750505081016020016104cd826104d96104bd565b805460208587018101919091529093019281016117aa565b503461000e57600036600319011261000e5760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b503461000e57602036600319011261000e576004356001600160601b03811680820361000e576127109061184b6122d9565b116118a5576107749061185f301515612a87565b61187e61186a6114e0565b308152916001600160601b03166020830152565b805160209091015160a01b6001600160a01b0319166001600160a01b039190911617600955565b60405162461bcd60e51b815260206004820152602a60248201527f455243323938313a20726f79616c7479206665652077696c6c206578636565646044820152692073616c65507269636560b01b6064820152608490fd5b503461000e57602036600319011261000e576020610ee9600435611920816105b1565b60018060a01b031660005260056020526001600160401b0360406000205460401c1690565b503461000e57604036600319011261000e57602060ff6119a260043561196a816105b1565b60243590611977826105b1565b60018060a01b03166000526007845260406000209060018060a01b0316600052602052604060002090565b54166040519015158152f35b503461000e57602036600319011261000e576004356119cc816105b1565b6119d46122d9565b6001600160a01b03908116908115611a2a5760009160085491816001600160601b0360a01b84161760085560405192167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08484a3f35b60405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b503461000e57602036600319011261000e57600435611a9c816105b1565b611aa46122d9565b4715611b0057600080809247604051915af1611abe611edc565b5015611ac657005b60405162461bcd60e51b81526020600482015260126024820152714661696c656420746f20776974686472617760701b6044820152606490fd5b60405162461bcd60e51b815260206004820152600c60248201526b5a65726f2062616c616e636560a01b6044820152606490fd5b6001600160a01b03168015611b5d5760005260056020526001600160401b036040600020541690565b6040516323d3ad8160e21b8152600490fd5b60019080821115611b8d575b604051636f96cda160e11b8152600490fd5b611ba1816000526004602052604060002090565b5491600160e01b831615611bb55750611b7b565b8215611bc057505090565b600054821015611b7b5790815b611bd657505090565b90915060001901611bf1816000526004602052604060002090565b54918215611bfe57505090565b9081611bcd565b80600111159081611c34575b81611c1a575090565b90506000526004602052600160e01b604060002054161590565b60005481109150611c11565b611c4983611b6f565b6001600160a01b039282841692828516849003611e0957600086815260066020526040902080549095909190611c926001600160a01b03831633908114908514171590565b1590565b611dc5575b8316958615611db357611d1892611da9575b506001600160a01b038181166000908152600560205260408082208054600019019055918516815220805460010190556001600160e81b031990611cf49060e886901c90859061272b565b600160e11b936001600160a01b03164260a01b60e89290921b929092161717821790565b611d2c866000526004602052604060002090565b55811615611d5f575b507fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6000604051a4565b60018401611d77816000526004602052604060002090565b5415611d84575b50611d35565b6000548114611d7e57611da1906000526004602052604060002090565b553880611d7e565b6000905538611ca9565b604051633a954ecd60e21b8152600490fd5b611df2611c8e611deb3361066b8660018060a01b03166000526007602052604060002090565b5460ff1690565b15611c9757604051632ce44b5f60e11b8152600490fd5b60405162a1148160e81b8152600490fd5b929190611e28828286611c40565b803b611e35575b50505050565b611e3e93611fb5565b15611e4c5738808080611e2f565b6040516368d2bf6b60e11b8152600490fd5b9081602091031261000e575161047c81610364565b61047c939260809260018060a01b031682526000602083015260408201528160608201520190610446565b6001600160a01b03918216815291166020820152604081019190915260806060820181905261047c92910190610446565b506040513d6000823e3d90fd5b3d15611f07573d90611eed826114ef565b91611efb60405193846114bf565b82523d6000602084013e565b606090565b611f3560209160009394604051948580948193630a85bd0160e11b998a84523360048501611e73565b03926001600160a01b03165af160009181611f85575b50611f7757611f58611edc565b80519081611f72576040516368d2bf6b60e11b8152600490fd5b602001fd5b6001600160e01b0319161490565b611fa791925060203d8111611fae575b611f9f81836114bf565b810190611e5e565b9038611f4b565b503d611f95565b92602091611f35936000604051809681958294630a85bd0160e11b9a8b85523360048601611e9e565b60405190608082018281106001600160401b03821117612014575b60405260006060838281528260208201528260408201520152565b61201c611437565b611ff9565b612029611fde565b50612032611fde565b600182108015612074575b61206f575061204b81612080565b604081015161206f575061206a61047c91612064611fde565b50611b6f565b61209b565b905090565b5060005482101561203d565b612088611fde565b50600052600460205261047c6040600020545b906120a4611fde565b6001600160a01b038316815260a083901c6001600160401b03166020820152600160e01b83161515604082015260e89290921c6060830152565b6020906001600160401b0381116120f7575b60051b0190565b6120ff611437565b6120f0565b50634e487b7160e01b600052603260045260246000fd5b919081101561212b5760051b0190565b6120ff612104565b6020918151811015612148575b60051b010190565b612150612104565b612140565b9061215f826120de565b61216c60405191826114bf565b828152809261217d601f19916120de565b0190602036910137565b90828110156122c7576000918254916001928382106122bf575b8086116122b7575b506121b382611b34565b91858210156122af578186038381106122a7575b505b6121d283612155565b95831561229e5784936121e484612021565b9187946040936121f9611c8e86830151151590565b61228c575b50955b612212575b50505050505050815290565b8086141580612282575b1561227d57868661222d8298612080565b8086015161227757516001600160a01b039081168061226f575b508087169088161461225b575b0195612201565b80612269838c019b8d612133565b52612254565b975038612247565b50612254565b612206565b508188141561221c565b516001600160a01b03169550386121fe565b50505050505090565b9250386121c7565b8492506121c9565b9450386121a9565b8391506121a1565b604051631960ccad60e11b8152600490fd5b6008546001600160a01b031633036122ed57565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b50634e487b7160e01b600052601160045260246000fd5b60409081519161235783611489565b600080845280546001600160a01b0384168252600560205260408220805468010000000000000001019055909390926123be6001600160e81b031961239b836126d2565b6001600160a01b0384164260a01b60e89290921b929092161717600160e11b1790565b6123d2856000526004602052604060002090565b556001848101949091906001600160a01b0382167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef82828a838180a484885b8981036124a4575050501561249457858755813b612433575b50505050505050565b9180805b612454575b5050505050508154036105595780808080808061242a565b15612487575b8661246c611c8e868487019686611f0c565b6124765781612437565b85516368d2bf6b60e11b8152600490fd5b85831061245a578061243c565b8451622e076360e81b8152600490fd5b80848c858180a4018590612411565b60019060001981146124c3570190565b6124cb612331565b0190565b9081602091031261000e575161047c816105b1565b6001600160a01b03909116815260406020820181905281018390526001600160fb1b03831161000e5760609260051b80928483013701016000815290565b916001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116929160009182905b84841061257e5760405163039e5b7760e51b81528061257a878a8a600485016124e4565b0390fd5b6125908486899598969997949761211b565b35946125b58660ff6001918060081c600052600e602052161b60406000205416151590565b6126c257604080516331a9108f60e11b81526004810188905290989060209081816024818b5afa9182156126b5575b8492612688575b505083339116036126705750505050506126647f3626b5db6ac6441079214cae6a8c3aaaa1681a609a0b424772b5b4f5297a114f9394612644848060081c600052600e602052600160ff604060002092161b8154179055565b516001600160a01b03909216825260208201929092529081906040820190565b0390a16114ed33612348565b909295506126829194969397506124b3565b92612556565b6126a79250803d106126ae575b61269f81836114bf565b8101906124cf565b38806125eb565b503d612695565b6126bd611ecf565b6125e4565b91945092949195612682906124b3565b62ffffff906001431061271e575b604051602081019144835260001943014060408301526000606083015260018060a01b0316608082015260808152612717816114a4565b5190201690565b612726612331565b6126e0565b62ffffff9283811661278757506001431061277a575b604051906020820192448452600019430140604084015260018060a01b03809216606084015216608082015260808152612717816114a4565b612782612331565b612741565b9250505090565b600c546001600160a01b031690816127aa5761047c9150612876565b60405191829163c87b56dd60e01b8352600483015281602460009485935afa918215612856575b80926127dc57505090565b9091503d8082843e6127ee81846114bf565b820191602081840312612852578051906001600160401b038211610ff6570182601f8201121561285257805191612824836114ef565b9361283260405195866114bf565b8385526020848401011161055957509061047c9160208085019101610411565b5080fd5b61285e611ecf565b6127d1565b906124cb60209282815194859201610411565b61287f81611c05565b15612926576040519061289c82612895816116bf565b03836114bf565b81516000901561291157506040519060a08201604052608082019060008252905b6000190190600a9060308282060183530490816128bd5790506128ff9261290561047c936080601f199485810192030181526040519586936020850190612863565b90612863565b039081018352826114bf565b9150506040519061292182611489565b815290565b604051630a14c4b560e41b8152600490fd5b600b546001600160a01b03169291908361295b576129579293506129df565b9091565b9060446040928351958693849263152a902d60e11b8452600484015260248301525afa9182156129d2575b600090819361299457509190565b92506040833d82116129ca575b816129ae604093836114bf565b81010312610559575060208251926129c5846105b1565b015190565b3d91506129a1565b6129da611ecf565b612986565b919091600052600a6020526127106040600020604051906129ff8261146e565b546001600160a01b0380821680845260a09290921c60208401529015612a63575b50612a506001600160601b03602083015116918560001904831186151516612a56575b516001600160a01b031690565b93020490565b612a5e612331565b612a43565b6040519150612a718261146e565b600954908116825260a01c602082015238612a20565b15612a8e57565b60405162461bcd60e51b815260206004820152601960248201527f455243323938313a20696e76616c6964207265636569766572000000000000006044820152606490fd5b601f8111612adf575050565b600090600d8252600080516020612b57833981519152906020601f850160051c83019410612b28575b601f0160051c01915b828110612b1d57505050565b818155600101612b11565b9092508290612b08565b9081602091031261000e575190565b9081602091031261000e575161047c8161122756fed7b6990105719101dabeb77144f2a3385c8033acd3af97e9423a695e81ad1eb5a164736f6c634300080d000a";

type AFundamentalDisputeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AFundamentalDisputeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AFundamentalDispute__factory extends ContractFactory {
  constructor(...args: AFundamentalDisputeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _foldedFaces: PromiseOrValue<string>,
    artist: PromiseOrValue<string>,
    developer: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<AFundamentalDispute> {
    return super.deploy(
      _foldedFaces,
      artist,
      developer,
      overrides || {}
    ) as Promise<AFundamentalDispute>;
  }
  override getDeployTransaction(
    _foldedFaces: PromiseOrValue<string>,
    artist: PromiseOrValue<string>,
    developer: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _foldedFaces,
      artist,
      developer,
      overrides || {}
    );
  }
  override attach(address: string): AFundamentalDispute {
    return super.attach(address) as AFundamentalDispute;
  }
  override connect(signer: Signer): AFundamentalDispute__factory {
    return super.connect(signer) as AFundamentalDispute__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AFundamentalDisputeInterface {
    return new utils.Interface(_abi) as AFundamentalDisputeInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AFundamentalDispute {
    return new Contract(address, _abi, signerOrProvider) as AFundamentalDispute;
  }
}
