/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  AFundamentalDispute,
  AFundamentalDisputeInterface,
} from "../../AFD.sol/AFundamentalDispute";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IERC721",
        name: "_foldedFaces",
        type: "address",
      },
      {
        internalType: "address",
        name: "artist",
        type: "address",
      },
      {
        internalType: "address",
        name: "developer",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ApprovalCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "ApprovalQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "BalanceQueryForZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidQueryRange",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "mintsLeft",
        type: "uint256",
      },
    ],
    name: "MaxSupplyExceeded",
    type: "error",
  },
  {
    inputs: [],
    name: "MintERC2309QuantityExceedsLimit",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "mintsLeft",
        type: "uint256",
      },
    ],
    name: "MintLimitExceeded",
    type: "error",
  },
  {
    inputs: [],
    name: "MintToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "MintZeroQuantity",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
    ],
    name: "NoValidTokenDiscount",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnerQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnershipNotInitializedForExtraData",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferFromIncorrectOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToNonERC721ReceiverImplementer",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "URIQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "expectedPayment",
        type: "uint256",
      },
    ],
    name: "WrongPayment",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "previousBaseTokenURI",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "newBaseTokenURI",
        type: "string",
      },
    ],
    name: "BaseTokenURIUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "fromTokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "toTokenId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "ConsecutiveTransfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "contract IRenderer",
        name: "previousRenderer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "contract IRenderer",
        name: "newRenderer",
        type: "address",
      },
    ],
    name: "RendererUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "TokenDiscountUsed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseTokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "explicitOwnershipOf",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "addr",
            type: "address",
          },
          {
            internalType: "uint64",
            name: "startTimestamp",
            type: "uint64",
          },
          {
            internalType: "bool",
            name: "burned",
            type: "bool",
          },
          {
            internalType: "uint24",
            name: "extraData",
            type: "uint24",
          },
        ],
        internalType: "struct IERC721A.TokenOwnership",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
    ],
    name: "explicitOwnershipsOf",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "addr",
            type: "address",
          },
          {
            internalType: "uint64",
            name: "startTimestamp",
            type: "uint64",
          },
          {
            internalType: "bool",
            name: "burned",
            type: "bool",
          },
          {
            internalType: "uint24",
            name: "extraData",
            type: "uint24",
          },
        ],
        internalType: "struct IERC721A.TokenOwnership[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "foldedFaces",
    outputs: [
      {
        internalType: "contract IERC721",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
    ],
    name: "foldedFacesMint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "hasUsedFoldedFaces",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "holderPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "startTokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "quantity",
        type: "uint256",
      },
    ],
    name: "normalizeOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "numberMinted",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "publicPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renderer",
    outputs: [
      {
        internalType: "contract IRenderer",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "salePrice",
        type: "uint256",
      },
    ],
    name: "royaltyInfo",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "royaltyProvider",
    outputs: [
      {
        internalType: "contract IERC2981",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_baseTokenURI",
        type: "string",
      },
    ],
    name: "setBaseTokenURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint96",
        name: "_royaltyBasisPoints",
        type: "uint96",
      },
    ],
    name: "setDefaultRoyalty",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IRenderer",
        name: "_renderer",
        type: "address",
      },
    ],
    name: "setRenderer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC2981",
        name: "_royaltyProvider",
        type: "address",
      },
    ],
    name: "setRoyaltyProvider",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "tokensOfOwner",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "start",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "stop",
        type: "uint256",
      },
    ],
    name: "tokensOfOwnerIn",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalMinted",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "withdrawAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "withdrawAllERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC721",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "withdrawERC721",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60c080604052346200009e57606081620031a18038038091620000238285620000e5565b8339810103126200009e5780516200006791620000408262000109565b6040602082015191620000538362000109565b015191620000618362000109565b62000145565b604051612b09908162000698823960805181818161071401528181610aa5015261177c015260a0518181816106b101526124b30152f35b600080fd5b50634e487b7160e01b600052604160045260246000fd5b604081019081106001600160401b03821117620000d657604052565b620000e0620000a3565b604052565b601f909101601f19168101906001600160401b03821190821017620000d657604052565b6001600160a01b038116036200009e57565b604051906200012a82620000ba565b60158252565b604051906200013f82620000ba565b60138252565b6200014f6200011b565b6020907f412046756e64616d656e74616c20446973707574650000000000000000000000828201526200018162000130565b7f4146554e44414d454e54414c4449535055544500000000000000000000000000838201528151909290916001600160401b03831162000316575b620001d483620001ce60025462000326565b62000363565b81601f841160011462000279575092826200026595936200021a936200026b9998966000926200026d575b50508160011b916000199060031b1c19161760025562000415565b620002256001600055565b620002303362000649565b60da6080527f5daa87a0e9463431830481fd4b6e3403442dfb9a12b9c07597e9f61d50b633c86000604051a160a05262000519565b62000519565b565b015190503880620001ff565b60026000529190601f1984167f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace936000905b828210620002fd575050936200021a936200026b9998969360019383620002659a9810620002e3575b505050811b0160025562000415565b015160001960f88460031b161c19169055388080620002d4565b80600186978294978701518155019601940190620002ab565b62000320620000a3565b620001bc565b90600182811c9216801562000358575b60208310146200034257565b634e487b7160e01b600052602260045260246000fd5b91607f169162000336565b601f811162000370575050565b6000906002825260208220906020601f850160051c83019410620003b1575b601f0160051c01915b828110620003a557505050565b81815560010162000398565b90925082906200038f565b601f8111620003c9575050565b6000906003825260208220906020601f850160051c830194106200040a575b601f0160051c01915b828110620003fe57505050565b818155600101620003f1565b9092508290620003e8565b80519091906001600160401b03811162000509575b62000442816200043c60035462000326565b620003bc565b602080601f831160011462000481575081929360009262000475575b50508160011b916000199060031b1c191617600355565b0151905038806200045e565b6003600052601f198316949091907fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b926000905b878210620004f0575050836001959610620004d6575b505050811b01600355565b015160001960f88460031b161c19169055388080620004cb565b80600185968294968601518155019501930190620004b5565b62000513620000a3565b6200042a565b6000805490916001600160a01b0381169081156200063857818452600560205260408420680a000000000000000a815401905560014310620006245790620005ca600a9392604051620005b46020820144815260001943014060408401528860608401528560808401526080835260a0830183811060018060401b0382111762000614575b60405262ffffff60e81b9251902062ffffff1690565b60e81b164260a01b179060018060a01b03161790565b620005df836000526004602052604060002090565b5583827fdeaa91b6123d068f5821d0fb0678463d1a8a6079fe8af5de3ce5e896dcf9133d6020604051600984018152a4019055565b6200061e620000a3565b6200059e565b634e487b7160e01b84526011600452602484fd5b604051622e076360e81b8152600490fd5b600880546001600160a01b039283166001600160a01b031982168117909255604051919216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a356fe60806040526004361015610013575b600080fd5b60003560e01c806301ffc9a71461035b57806306fdde0314610352578063081812fc14610349578063095ea7b314610340578063105ea6d3146103375780631249c58b1461032e57806318160ddd1461032557806323b872dd1461031c5780632a55205a1461031357806330176e131461030a578063426edbaf1461030157806342842e0e146102f857806352f0832a146102ef57806355ea7328146102e657806356d3163d146102dd57806359edf34e146102d45780635bbb2177146102cb5780635f7c7cca146102c25780636352211e146102b957806370a08231146102b0578063715018a6146102a75780637b9f76b51461029e5780638462151c146102955780638ada6b0f1461028c5780638da5cb5b1461028357806395d89b411461027a57806399a2557a14610271578063a22cb46514610268578063a2309ff81461025f578063a945bf8014610256578063ae11c7f81461024d578063b88d4fde14610244578063b9b8f4d81461023b578063c23dc68f14610232578063c87b56dd14610229578063d547cfb714610220578063d5abeb0114610217578063d6948b751461020e578063dc33e68114610205578063e985e9c5146101fc578063f2fde38b146101f35763fa09e630146101eb57600080fd5b61000e611a04565b5061000e611934565b5061000e6118cb565b5061000e611883565b5061000e61179f565b5061000e611763565b5061000e6116cd565b5061000e6115d7565b5061000e611573565b5061000e61152b565b5061000e61149f565b5061000e611294565b5061000e611270565b5061000e61124d565b5061000e6111b7565b5061000e611170565b5061000e6110c8565b5061000e61109e565b5061000e611074565b5061000e610fbb565b5061000e610ed9565b5061000e610e77565b5061000e610e47565b5061000e610e17565b5061000e610dd4565b5061000e610d2f565b5061000e610c87565b5061000e610c0e565b5061000e610bea565b5061000e610b6a565b5061000e610b46565b5061000e610a72565b5061000e6108ae565b5061000e610871565b5061000e61085e565b5061000e61080a565b5061000e6106e0565b5061000e61069a565b5061000e6105c2565b5061000e61055c565b5061000e61047f565b5061000e610376565b6001600160e01b031981160361000e57565b503461000e57602036600319011261000e57602060043561039681610364565b63ffffffff60e01b166301ffc9a760e01b81149081908215610400575b82156103ef575b82156103cd575b50506040519015158152f35b63152a902d60e11b14915081156103e7575b5038806103c1565b9050386103df565b635b5e139f60e01b811492506103ba565b6380ac58cd60e01b811492506103b3565b918091926000905b82821061043157501161042a575050565b6000910152565b91508060209183015181860152018291610419565b9060209161045f81518092818552858086019101610411565b601f01601f1916010190565b90602061047c928181520190610446565b90565b503461000e576000806003193601126105595760405190806002546104a38161160b565b8085529160019180831690811561053857506001146104dd575b6104d9856104cd81870382611445565b6040519182918261046b565b0390f35b9250600283527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace5b8284106105205750505081016020016104cd826104d96104bd565b80546020858701810191909152909301928101610505565b60ff1916602087015250506040840192506104cd91508390506104d96104bd565b80fd5b503461000e57602036600319011261000e5760043561057a81611b8b565b1561059f576000526006602052602060018060a01b0360406000205416604051908152f35b6040516333d1c03960e21b8152600490fd5b6001600160a01b0381160361000e57565b50604036600319011261000e576004356105db816105b1565b6001600160a01b0390602435826105f182611af5565b1691823303610649575b600093828552600660205260408520911690816001600160601b0360a01b825416179055604051927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258585a4f35b60ff6106823361066b8660018060a01b03166000526007602052604060002090565b9060018060a01b0316600052602052604060002090565b54166105fb576040516367d9dca160e11b8152600490fd5b503461000e57600036600319011261000e576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b50600036600319011261000e5767016345785d8a00008034036107f257600054600119906000198101908282116107e5575b7f0000000000000000000000000000000000000000000000000000000000000000918282116107b3573360009081526005602052604090819020546001600160401b03911c168481116107a6575b60018082011161077557610773336122ce565b005b80602491600110610799575b60405190637e0311c360e11b82526001036004820152fd5b6107a16122b7565b610781565b6107ae6122b7565b610760565b8291600191602494106107d8575b60405163cbbf111360e01b81529203016004820152fd5b6107e06122b7565b6107c1565b6107ed6122b7565b610712565b6024906040519063b23bee0560e01b82526004820152fd5b503461000e57600036600319011261000e576000546001546040519103600019018152602090f35b606090600319011261000e5760043561084a816105b1565b90602435610857816105b1565b9060443590565b5061077361086b36610832565b91611bc6565b503461000e57604036600319011261000e576108916024356004356128be565b604080516001600160a01b03939093168352602083019190915290f35b503461000e5760208060031936011261000e576001600160401b0360043581811161000e573660238201121561000e57806004013591821161000e576024903682848301011161000e5761090061225f565b60405193604085527f19c1a81f34d9a8d208a44017474815e9089aff4b57e461c08509577eea2c390061093560408701611645565b9580870383820152858752858585018489013760008387890101528281601f199889601f8a011601030190a161097584610970600d5461160b565b612a59565b600094601f85116001146109b55750509282936000936109a8575b5050508160011b916000199060031b1c191617600d55005b0101359050388080610990565b600d600052841694600080516020612add833981519152939181905b878210610a0c57505084600196106109f0575b50505050811b01600d55005b60001960f88660031b161c1992010135169055388080806109e4565b8060018497868395968901013581550196019201906109d1565b90602060031983011261000e576004356001600160401b039283821161000e578060238301121561000e57816004013593841161000e5760248460051b8301011161000e576024019190565b50610a7c36610a26565b67011c37937e0800008034036107f257506000546001199290600019810190848211610b39575b7f0000000000000000000000000000000000000000000000000000000000000000918282116107b3575050336000908152600560205260409081902054901c6001600160401b03169050928311610b2c575b600180840111610b095761077392506124a8565b602483806001106107995760405190637e0311c360e11b82526001036004820152fd5b610b346122b7565b610af5565b610b416122b7565b610aa3565b50610773610b5336610832565b9060405192610b618461140f565b60008452611da0565b503461000e5760408060031936011261000e576024356004803560005b838110610b9057005b80610bbd91198311610bdd575b80830180600052846020818152886000205415610bc2575b505050612439565b610b87565b610bcb83611af5565b92600052528660002055388481610bb5565b610be56122b7565b610b9d565b503461000e57600036600319011261000e57602060405167011c37937e0800008152f35b503461000e57602036600319011261000e57600435610c2c816105b1565b610c3461225f565b600c54604080516001600160a01b03808416825290931660208401819052927f10e9b6d73105db46c6a41a698f35efb8e1688178fe274b7b21f0bdc792de3ea59190a16001600160a01b03191617600c55005b503461000e57600036600319011261000e57600b546040516001600160a01b039091168152602090f35b6020908160408183019282815285518094520193019160005b828110610cd8575050505090565b9091929382608082610d23600194895162ffffff6060809260018060a01b0381511685526001600160401b036020820151166020860152604081015115156040860152015116910152565b01950193929101610cca565b503461000e57610d3e36610a26565b90610d4882612064565b91610d566040519384611445565b808352601f19610d6582612064565b0160005b818110610dbd57505060005b818103610d8a57604051806104d98682610cb1565b80610da1610d9b60019385876120a1565b35611fa7565b610dab82876120b9565b52610db681866120b9565b5001610d75565b602090610dc8611f64565b82828801015201610d69565b503461000e57602036600319011261000e576020610e0d60043560ff6001918060081c600052600e602052161b60406000205416151590565b6040519015158152f35b503461000e57602036600319011261000e5760206001600160a01b03610e3e600435611af5565b16604051908152f35b503461000e57602036600319011261000e576020610e6f600435610e6a816105b1565b611aba565b604051908152f35b503461000e5760008060031936011261055957610e9261225f565b600880546001600160a01b031981169091556040519082906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08284a3f35b503461000e576000606036600319011261055957600435610ef9816105b1565b8160443591610f07836105b1565b610f0f61225f565b6001600160a01b0390811692833b15610f7c57606490836040519586948593632142170760e11b855230600486015216602484015260243560448401525af18015610f6f575b610f60575b50604051f35b610f69906113d4565b38610f5a565b610f77611e55565b610f55565b8280fd5b6020908160408183019282815285518094520193019160005b828110610fa7575050505090565b835185529381019392810192600101610f99565b503461000e57602036600319011261000e57600435610fd9816105b1565b60008091610fe681611aba565b610fef816120db565b92610ff8611f64565b506001926001600160a01b0390811690845b84840361101f57604051806104d98982610f80565b8161102982612006565b87604082015161106b5750511680611063575b50859083838a161461104f575b0161100a565b8061105d838701968a6120b9565b52611049565b97508561103c565b92915050611049565b503461000e57600036600319011261000e57600c546040516001600160a01b039091168152602090f35b503461000e57600036600319011261000e576008546040516001600160a01b039091168152602090f35b503461000e576000806003193601126105595760405190806003546110ec8161160b565b808552916001918083169081156105385750600114611115576104d9856104cd81870382611445565b9250600383527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b5b8284106111585750505081016020016104cd826104d96104bd565b8054602085870181019190915290930192810161113d565b503461000e57606036600319011261000e576104d96111a1600435611194816105b1565b604435906024359061210d565b60405191829182610f80565b8015150361000e57565b503461000e57604036600319011261000e576004356111d5816105b1565b602435906111e2826111ad565b3360009081526007602090815260408083206001600160a01b038516845290915290209115159160ff1981541660ff841617905560405191825260018060a01b0316907f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160203392a3005b503461000e57600036600319011261000e57602060001960005401604051908152f35b503461000e57600036600319011261000e57602060405167016345785d8a00008152f35b503461000e57604036600319011261000e576004356112b2816105b1565b61133d602435916112c2836105b1565b6112ca61225f565b6040516370a0823160e01b815230600482015260209384926001600160a01b0316908383602481855afa9283156113b0575b600093611381575b5060405163a9059cbb60e01b81526001600160a01b03909116600482015260248101929092529092839190829060009082906044820190565b03925af18015611374575b61134e57005b8161077392903d1061136d575b6113658183611445565b810190612ac7565b503d61135b565b61137c611e55565b611348565b6113a2919350843d86116113a9575b61139a8183611445565b810190612ab8565b9138611304565b503d611390565b6113b8611e55565b6112fc565b50634e487b7160e01b600052604160045260246000fd5b6001600160401b0381116113e757604052565b6113ef6113bd565b604052565b604081019081106001600160401b038211176113e757604052565b602081019081106001600160401b038211176113e757604052565b60a081019081106001600160401b038211176113e757604052565b90601f801991011681019081106001600160401b038211176113e757604052565b60405190611473826113f4565b565b6020906001600160401b038111611492575b601f01601f19160190565b61149a6113bd565b611487565b50608036600319011261000e576004356114b8816105b1565b6024356114c4816105b1565b606435916001600160401b03831161000e573660238401121561000e578260040135916114f083611475565b926114fe6040519485611445565b808452366024828701011161000e5760208160009260246107739801838801378501015260443591611da0565b503461000e57602036600319011261000e57600435611549816105b1565b61155161225f565b600b80546001600160a01b0319166001600160a01b0392909216919091179055005b503461000e57602036600319011261000e576080611592600435611fa7565b6115d5604051809262ffffff6060809260018060a01b0381511685526001600160401b036020820151166020860152604081015115156040860152015116910152565bf35b503461000e57602036600319011261000e576104d96115f7600435612714565b604051918291602083526020830190610446565b90600182811c9216801561163b575b602083101461162557565b634e487b7160e01b600052602260045260246000fd5b91607f169161161a565b600d54600092916116558261160b565b808252916001908181169081156116ba575060011461167357505050565b91929350600d600052600080516020612add833981519152916000925b8484106116a257505060209250010190565b80546020858501810191909152909301928101611690565b60ff191660208401525050604001925050565b503461000e57600080600319360112610559576040519080600d546116f18161160b565b80855291600191808316908115610538575060011461171a576104d9856104cd81870382611445565b9250600d8352600080516020612add8339815191525b82841061174b5750505081016020016104cd826104d96104bd565b80546020858701810191909152909301928101611730565b503461000e57600036600319011261000e5760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b503461000e57602036600319011261000e576004356001600160601b03811680820361000e57612710906117d161225f565b1161182b57610773906117e5301515612a0d565b6118046117f0611466565b308152916001600160601b03166020830152565b805160209091015160a01b6001600160a01b0319166001600160a01b039190911617600955565b60405162461bcd60e51b815260206004820152602a60248201527f455243323938313a20726f79616c7479206665652077696c6c206578636565646044820152692073616c65507269636560b01b6064820152608490fd5b503461000e57602036600319011261000e576020610e6f6004356118a6816105b1565b60018060a01b031660005260056020526001600160401b0360406000205460401c1690565b503461000e57604036600319011261000e57602060ff6119286004356118f0816105b1565b602435906118fd826105b1565b60018060a01b03166000526007845260406000209060018060a01b0316600052602052604060002090565b54166040519015158152f35b503461000e57602036600319011261000e57600435611952816105b1565b61195a61225f565b6001600160a01b039081169081156119b05760009160085491816001600160601b0360a01b84161760085560405192167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08484a3f35b60405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b503461000e57602036600319011261000e57600435611a22816105b1565b611a2a61225f565b4715611a8657600080809247604051915af1611a44611e62565b5015611a4c57005b60405162461bcd60e51b81526020600482015260126024820152714661696c656420746f20776974686472617760701b6044820152606490fd5b60405162461bcd60e51b815260206004820152600c60248201526b5a65726f2062616c616e636560a01b6044820152606490fd5b6001600160a01b03168015611ae35760005260056020526001600160401b036040600020541690565b6040516323d3ad8160e21b8152600490fd5b60019080821115611b13575b604051636f96cda160e11b8152600490fd5b611b27816000526004602052604060002090565b5491600160e01b831615611b3b5750611b01565b8215611b4657505090565b600054821015611b015790815b611b5c57505090565b90915060001901611b77816000526004602052604060002090565b54918215611b8457505090565b9081611b53565b80600111159081611bba575b81611ba0575090565b90506000526004602052600160e01b604060002054161590565b60005481109150611b97565b611bcf83611af5565b6001600160a01b039282841692828516849003611d8f57600086815260066020526040902080549095909190611c186001600160a01b03831633908114908514171590565b1590565b611d4b575b8316958615611d3957611c9e92611d2f575b506001600160a01b038181166000908152600560205260408082208054600019019055918516815220805460010190556001600160e81b031990611c7a9060e886901c9085906126b1565b600160e11b936001600160a01b03164260a01b60e89290921b929092161717821790565b611cb2866000526004602052604060002090565b55811615611ce5575b507fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6000604051a4565b60018401611cfd816000526004602052604060002090565b5415611d0a575b50611cbb565b6000548114611d0457611d27906000526004602052604060002090565b553880611d04565b6000905538611c2f565b604051633a954ecd60e21b8152600490fd5b611d78611c14611d713361066b8660018060a01b03166000526007602052604060002090565b5460ff1690565b15611c1d57604051632ce44b5f60e11b8152600490fd5b60405162a1148160e81b8152600490fd5b929190611dae828286611bc6565b803b611dbb575b50505050565b611dc493611f3b565b15611dd25738808080611db5565b6040516368d2bf6b60e11b8152600490fd5b9081602091031261000e575161047c81610364565b61047c939260809260018060a01b031682526000602083015260408201528160608201520190610446565b6001600160a01b03918216815291166020820152604081019190915260806060820181905261047c92910190610446565b506040513d6000823e3d90fd5b3d15611e8d573d90611e7382611475565b91611e816040519384611445565b82523d6000602084013e565b606090565b611ebb60209160009394604051948580948193630a85bd0160e11b998a84523360048501611df9565b03926001600160a01b03165af160009181611f0b575b50611efd57611ede611e62565b80519081611ef8576040516368d2bf6b60e11b8152600490fd5b602001fd5b6001600160e01b0319161490565b611f2d91925060203d8111611f34575b611f258183611445565b810190611de4565b9038611ed1565b503d611f1b565b92602091611ebb936000604051809681958294630a85bd0160e11b9a8b85523360048601611e24565b60405190608082018281106001600160401b03821117611f9a575b60405260006060838281528260208201528260408201520152565b611fa26113bd565b611f7f565b611faf611f64565b50611fb8611f64565b600182108015611ffa575b611ff55750611fd181612006565b6040810151611ff55750611ff061047c91611fea611f64565b50611af5565b612021565b905090565b50600054821015611fc3565b61200e611f64565b50600052600460205261047c6040600020545b9061202a611f64565b6001600160a01b038316815260a083901c6001600160401b03166020820152600160e01b83161515604082015260e89290921c6060830152565b6020906001600160401b03811161207d575b60051b0190565b6120856113bd565b612076565b50634e487b7160e01b600052603260045260246000fd5b91908110156120b15760051b0190565b61208561208a565b60209181518110156120ce575b60051b010190565b6120d661208a565b6120c6565b906120e582612064565b6120f26040519182611445565b8281528092612103601f1991612064565b0190602036910137565b908281101561224d57600091825491600192838210612245575b80861161223d575b5061213982611aba565b91858210156122355781860383811061222d575b505b612158836120db565b95831561222457849361216a84611fa7565b91879460409361217f611c1486830151151590565b612212575b50955b612198575b50505050505050815290565b8086141580612208575b156122035786866121b38298612006565b808601516121fd57516001600160a01b03908116806121f5575b50808716908816146121e1575b0195612187565b806121ef838c019b8d6120b9565b526121da565b9750386121cd565b506121da565b61218c565b50818814156121a2565b516001600160a01b0316955038612184565b50505050505090565b92503861214d565b84925061214f565b94503861212f565b839150612127565b604051631960ccad60e11b8152600490fd5b6008546001600160a01b0316330361227357565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b50634e487b7160e01b600052601160045260246000fd5b6040908151916122dd8361140f565b600080845280546001600160a01b0384168252600560205260408220805468010000000000000001019055909390926123446001600160e81b031961232183612658565b6001600160a01b0384164260a01b60e89290921b929092161717600160e11b1790565b612358856000526004602052604060002090565b556001848101949091906001600160a01b0382167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef82828a838180a484885b89810361242a575050501561241a57858755813b6123b9575b50505050505050565b9180805b6123da575b505050505050815403610559578080808080806123b0565b1561240d575b866123f2611c14868487019686611e92565b6123fc57816123bd565b85516368d2bf6b60e11b8152600490fd5b8583106123e057806123c2565b8451622e076360e81b8152600490fd5b80848c858180a4018590612397565b6001906000198114612449570190565b6124516122b7565b0190565b9081602091031261000e575161047c816105b1565b6001600160a01b03909116815260406020820181905281018390526001600160fb1b03831161000e5760609260051b80928483013701016000815290565b916001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116929160009182905b8484106125045760405163039e5b7760e51b815280612500878a8a6004850161246a565b0390fd5b612516848689959896999794976120a1565b359461253b8660ff6001918060081c600052600e602052161b60406000205416151590565b61264857604080516331a9108f60e11b81526004810188905290989060209081816024818b5afa91821561263b575b849261260e575b505083339116036125f65750505050506125ea7f3626b5db6ac6441079214cae6a8c3aaaa1681a609a0b424772b5b4f5297a114f93946125ca848060081c600052600e602052600160ff604060002092161b8154179055565b516001600160a01b03909216825260208201929092529081906040820190565b0390a1611473336122ce565b90929550612608919496939750612439565b926124dc565b61262d9250803d10612634575b6126258183611445565b810190612455565b3880612571565b503d61261b565b612643611e55565b61256a565b9194509294919561260890612439565b62ffffff90600143106126a4575b604051602081019144835260001943014060408301526000606083015260018060a01b031660808201526080815261269d8161142a565b5190201690565b6126ac6122b7565b612666565b62ffffff9283811661270d575060014310612700575b604051906020820192448452600019430140604084015260018060a01b0380921660608401521660808201526080815261269d8161142a565b6127086122b7565b6126c7565b9250505090565b600c546001600160a01b031690816127305761047c91506127fc565b60405191829163c87b56dd60e01b8352600483015281602460009485935afa9182156127dc575b809261276257505090565b9091503d8082843e6127748184611445565b8201916020818403126127d8578051906001600160401b038211610f7c570182601f820112156127d8578051916127aa83611475565b936127b86040519586611445565b8385526020848401011161055957509061047c9160208085019101610411565b5080fd5b6127e4611e55565b612757565b9061245160209282815194859201610411565b61280581611b8b565b156128ac57604051906128228261281b81611645565b0383611445565b81516000901561289757506040519060a08201604052608082019060008252905b6000190190600a9060308282060183530490816128435790506128859261288b61047c936080601f1994858101920301815260405195869360208501906127e9565b906127e9565b03908101835282611445565b915050604051906128a78261140f565b815290565b604051630a14c4b560e41b8152600490fd5b600b546001600160a01b0316929190836128e1576128dd929350612965565b9091565b9060446040928351958693849263152a902d60e11b8452600484015260248301525afa918215612958575b600090819361291a57509190565b92506040833d8211612950575b8161293460409383611445565b810103126105595750602082519261294b846105b1565b015190565b3d9150612927565b612960611e55565b61290c565b919091600052600a602052612710604060002060405190612985826113f4565b546001600160a01b0380821680845260a09290921c602084015290156129e9575b506129d66001600160601b036020830151169185600019048311861515166129dc575b516001600160a01b031690565b93020490565b6129e46122b7565b6129c9565b60405191506129f7826113f4565b600954908116825260a01c6020820152386129a6565b15612a1457565b60405162461bcd60e51b815260206004820152601960248201527f455243323938313a20696e76616c6964207265636569766572000000000000006044820152606490fd5b601f8111612a65575050565b600090600d8252600080516020612add833981519152906020601f850160051c83019410612aae575b601f0160051c01915b828110612aa357505050565b818155600101612a97565b9092508290612a8e565b9081602091031261000e575190565b9081602091031261000e575161047c816111ad56fed7b6990105719101dabeb77144f2a3385c8033acd3af97e9423a695e81ad1eb5a164736f6c634300080d000a";

type AFundamentalDisputeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AFundamentalDisputeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AFundamentalDispute__factory extends ContractFactory {
  constructor(...args: AFundamentalDisputeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _foldedFaces: PromiseOrValue<string>,
    artist: PromiseOrValue<string>,
    developer: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<AFundamentalDispute> {
    return super.deploy(
      _foldedFaces,
      artist,
      developer,
      overrides || {}
    ) as Promise<AFundamentalDispute>;
  }
  override getDeployTransaction(
    _foldedFaces: PromiseOrValue<string>,
    artist: PromiseOrValue<string>,
    developer: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _foldedFaces,
      artist,
      developer,
      overrides || {}
    );
  }
  override attach(address: string): AFundamentalDispute {
    return super.attach(address) as AFundamentalDispute;
  }
  override connect(signer: Signer): AFundamentalDispute__factory {
    return super.connect(signer) as AFundamentalDispute__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AFundamentalDisputeInterface {
    return new utils.Interface(_abi) as AFundamentalDisputeInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AFundamentalDispute {
    return new Contract(address, _abi, signerOrProvider) as AFundamentalDispute;
  }
}
