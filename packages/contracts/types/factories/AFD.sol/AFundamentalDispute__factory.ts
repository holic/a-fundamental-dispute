/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  AFundamentalDispute,
  AFundamentalDisputeInterface,
} from "../../AFD.sol/AFundamentalDispute";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IERC721",
        name: "_foldedFaces",
        type: "address",
      },
      {
        internalType: "address",
        name: "artist",
        type: "address",
      },
      {
        internalType: "address",
        name: "developer",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ApprovalCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "ApprovalQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "BalanceQueryForZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidQueryRange",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidSignature",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "mintsLeft",
        type: "uint256",
      },
    ],
    name: "MaxSupplyExceeded",
    type: "error",
  },
  {
    inputs: [],
    name: "MintERC2309QuantityExceedsLimit",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "mintsLeft",
        type: "uint256",
      },
    ],
    name: "MintLimitExceeded",
    type: "error",
  },
  {
    inputs: [],
    name: "MintToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "MintZeroQuantity",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
    ],
    name: "NoValidTokenDiscount",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnerQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnershipNotInitializedForExtraData",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferFromIncorrectOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToNonERC721ReceiverImplementer",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "URIQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "expectedPayment",
        type: "uint256",
      },
    ],
    name: "WrongPayment",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "previousBaseTokenURI",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "newBaseTokenURI",
        type: "string",
      },
    ],
    name: "BaseTokenURIUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_fromTokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_toTokenId",
        type: "uint256",
      },
    ],
    name: "BatchMetadataUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "fromTokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "toTokenId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "ConsecutiveTransfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
    ],
    name: "MetadataUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "contract IRenderer",
        name: "previousRenderer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "contract IRenderer",
        name: "newRenderer",
        type: "address",
      },
    ],
    name: "RendererUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "nextSharedSigner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "previousSharedSigner",
        type: "address",
      },
    ],
    name: "SharedSignerUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "TokenDiscountUsed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseTokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "dispute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "disputes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "explicitOwnershipOf",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "addr",
            type: "address",
          },
          {
            internalType: "uint64",
            name: "startTimestamp",
            type: "uint64",
          },
          {
            internalType: "bool",
            name: "burned",
            type: "bool",
          },
          {
            internalType: "uint24",
            name: "extraData",
            type: "uint24",
          },
        ],
        internalType: "struct IERC721A.TokenOwnership",
        name: "ownership",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
    ],
    name: "explicitOwnershipsOf",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "addr",
            type: "address",
          },
          {
            internalType: "uint64",
            name: "startTimestamp",
            type: "uint64",
          },
          {
            internalType: "bool",
            name: "burned",
            type: "bool",
          },
          {
            internalType: "uint24",
            name: "extraData",
            type: "uint24",
          },
        ],
        internalType: "struct IERC721A.TokenOwnership[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "foldedFaces",
    outputs: [
      {
        internalType: "contract IERC721",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "tokenIds",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "foldedFacesMint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "extraEntropy",
        type: "bytes",
      },
    ],
    name: "generateSeed",
    outputs: [
      {
        internalType: "uint24",
        name: "",
        type: "uint24",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "hasUsedFoldedFaces",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "holderPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "lastDispute",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "startTokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "quantity",
        type: "uint256",
      },
    ],
    name: "normalizeOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "numberMinted",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "publicPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renderer",
    outputs: [
      {
        internalType: "contract IRenderer",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "salePrice",
        type: "uint256",
      },
    ],
    name: "royaltyInfo",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "royaltyProvider",
    outputs: [
      {
        internalType: "contract IERC2981",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_baseTokenURI",
        type: "string",
      },
    ],
    name: "setBaseTokenURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint96",
        name: "_royaltyBasisPoints",
        type: "uint96",
      },
    ],
    name: "setDefaultRoyalty",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IRenderer",
        name: "_renderer",
        type: "address",
      },
    ],
    name: "setRenderer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC2981",
        name: "_royaltyProvider",
        type: "address",
      },
    ],
    name: "setRoyaltyProvider",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "signer",
        type: "address",
      },
    ],
    name: "setSharedSigner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "sharedSigner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "signatureNotRequired",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenSeed",
    outputs: [
      {
        internalType: "uint24",
        name: "",
        type: "uint24",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "tokensOfOwner",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "start",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "stop",
        type: "uint256",
      },
    ],
    name: "tokensOfOwnerIn",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalMinted",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "withdrawAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "withdrawAllERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC721",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "withdrawERC721",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c060405234620000b157606062003b523881900390819060c0601f8301601f19168101906001600160401b03821190821017620000b6575b60405260c03912620000b1576200007a60c051620000568162000148565b60e051620000648162000148565b6101005191620000748362000148565b62000184565b60405161341d9081620007358239608051818181610913015281816112890152611c90015260a051818181610a9c0152612b430152f35b600080fd5b620000c0620000c6565b62000038565b50634e487b7160e01b600052604160045260246000fd5b604081019081106001600160401b03821117620000f957604052565b62000103620000c6565b604052565b606081019081106001600160401b03821117620000f957604052565b601f909101601f19168101906001600160401b03821190821017620000f957604052565b6001600160a01b03811603620000b157565b604051906200016982620000dd565b60158252565b604051906200017e82620000dd565b60138252565b6200018e6200015a565b6020907f412046756e64616d656e74616c2044697370757465000000000000000000000082820152620001c06200016f565b7f4146554e44414d454e54414c4449535055544500000000000000000000000000838201528151909290916001600160401b0383116200036b575b62000213836200020d6002546200037b565b620003b8565b81601f8411600114620002ce57509282620002ba95936200025993620002c0999896600092620002c2575b50508160011b916000199060031b1c1916176002556200046a565b620002646001600055565b6200026f33620006e6565b6101b46080527f5daa87a0e9463431830481fd4b6e3403442dfb9a12b9c07597e9f61d50b633c86000604051a1620002a643601055565b620002b160da601155565b60a0526200056e565b6200056e565b565b0151905038806200023e565b60026000529190601f1984167f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace936000905b82821062000352575050936200025993620002c09998969360019383620002ba9a981062000338575b505050811b016002556200046a565b015160001960f88460031b161c1916905538808062000329565b8060018697829497870151815501960194019062000300565b62000375620000c6565b620001fb565b90600182811c92168015620003ad575b60208310146200039757565b634e487b7160e01b600052602260045260246000fd5b91607f16916200038b565b601f8111620003c5575050565b6000906002825260208220906020601f850160051c8301941062000406575b601f0160051c01915b828110620003fa57505050565b818155600101620003ed565b9092508290620003e4565b601f81116200041e575050565b6000906003825260208220906020601f850160051c830194106200045f575b601f0160051c01915b8281106200045357505050565b81815560010162000446565b90925082906200043d565b80519091906001600160401b0381116200055e575b6200049781620004916003546200037b565b62000411565b602080601f8311600114620004d65750819293600092620004ca575b50508160011b916000199060031b1c191617600355565b015190503880620004b3565b6003600052601f198316949091907fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b926000905b878210620005455750508360019596106200052b575b505050811b01600355565b015160001960f88460031b161c1916905538808062000520565b806001859682949686015181550195019301906200050a565b62000568620000c6565b6200047f565b600080549192916001600160a01b0384168015620006d857808352602060058152604080852068150000000000000015815401905580519685838901528382890152818852620005be8862000108565b60014310620006c45781518381014481526000194301408483015233606083015260808083015289518060a0840152885b818110620006af57899a9b509383620006698a97946200065660c060159e9b98876200067f987fdeaa91b6123d068f5821d0fb0678463d1a8a6079fe8af5de3ce5e896dcf9133d9c11620006a2575b601f801991011681010360a081018652018462000124565b62ffffff60e81b9251902062ffffff1690565b60e81b164260a01b179060018060a01b03161790565b62000694856000526004602052604060002090565b5551601484018152a4019055565b8d8382840101526200063e565b8b810187015184820160c001528601620005ef565b634e487b7160e01b86526011600452602486fd5b622e076360e81b8352600483fd5b600880546001600160a01b039283166001600160a01b031982168117909255604051919216907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a356fe60806040526004361015610013575b600080fd5b60003560e01c806301ffc9a7146103fb5780630378ab98146103f257806306fdde03146103e9578063081812fc146103e0578063095ea7b3146103d75780630e07b3aa146103ce578063105ea6d3146103c557806318160ddd146103bc57806323b872dd146103b35780632a55205a146103aa57806330176e13146103a157806333bc51c71461039857806342842e0e1461038f57806352f0832a1461038657806355ea73281461037d57806356d3163d1461037457806359edf34e1461036b5780635bbb2177146103625780635f516836146103595780635f7c7cca146103505780636352211e1461034757806370a082311461033e578063715018a6146103355780637b9f76b51461032c5780637ba0e2e7146103235780638462151c1461031a5780638ada6b0f146103115780638da5cb5b1461030857806392556632146102ff57806395d89b41146102f657806399a2557a146102ed578063a22cb465146102e4578063a2309ff8146102db578063a945bf80146102d2578063ae11c7f8146102c9578063aeb6c233146102c0578063b88d4fde146102b7578063b9b8f4d8146102ae578063c23dc68f146102a5578063c87b56dd1461029c578063d4c5b25214610293578063d547cfb71461028a578063d5abeb0114610281578063d6948b7514610278578063dc33e6811461026f578063e985e9c514610266578063f2fde38b1461025d578063f82d578a14610254578063fa09e6301461024b5763fe018d841461024357600080fd5b61000e612086565b5061000e611fd0565b5061000e611f18565b5061000e611e48565b5061000e611ddf565b5061000e611d97565b5061000e611cb3565b5061000e611c77565b5061000e611be1565b5061000e611b00565b5061000e611acc565b5061000e611a68565b5061000e611a20565b5061000e6119ce565b5061000e6119a8565b5061000e61187f565b5061000e61185b565b5061000e611838565b5061000e6117a2565b5061000e611602565b5061000e61155a565b5061000e61152a565b5061000e611500565b5061000e6114d6565b5061000e611430565b5061000e611257565b5061000e611186565b5061000e611124565b5061000e6110f4565b5061000e6110c4565b5061000e611081565b5061000e611012565b5061000e610f99565b5061000e610ef1565b5061000e610e41565b5061000e610e1d565b5061000e610dca565b5061000e610da6565b5061000e610d2a565b5061000e610b71565b5061000e610b34565b5061000e610b1f565b5061000e610acb565b5061000e610a85565b5061000e6108a2565b5061000e61068b565b5061000e610626565b5061000e610549565b5061000e6104b1565b5061000e610416565b6001600160e01b031981160361000e57565b503461000e57602036600319011261000e57602060043561043681610404565b63ffffffff60e01b166301ffc9a760e01b811490819082156104a0575b821561048f575b821561046d575b50506040519015158152f35b63152a902d60e11b1491508115610487575b503880610461565b90503861047f565b635b5e139f60e01b8114925061045a565b6380ac58cd60e01b81149250610453565b503461000e57600036600319011261000e57600f546040516001600160a01b039091168152602090f35b918091926000905b8282106104fb5750116104f4575050565b6000910152565b915080602091830151818601520182916104e3565b90602091610529815180928185528580860191016104db565b601f01601f1916010190565b906020610546928181520190610510565b90565b503461000e5760008060031936011261062357604051908060025461056d81611b1f565b8085529160019180831690811561060257506001146105a7575b6105a38561059781870382610801565b60405191829182610535565b0390f35b9250600283527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace5b8284106105ea575050508101602001610597826105a3610587565b805460208587018101919091529093019281016105cf565b60ff19166020870152505060408401925061059791508390506105a3610587565b80fd5b503461000e57602036600319011261000e5760043561064481612182565b15610669576000526006602052602060018060a01b0360406000205416604051908152f35b6333d1c03960e21b60005260046000fd5b6001600160a01b0381160361000e57565b50604036600319011261000e576004356106a48161067a565b6001600160a01b0390602435826106ba826120df565b16803303610717575b600082815260066020526040812080546001600160a01b0319166001600160a01b038616179055936040519316907f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258585a4f35b600081815260076020908152604080832033845290915290205460ff166106c3576367d9dca160e11b60005260046000fd5b9181601f8401121561000e578235916001600160401b03831161000e576020808501948460051b01011161000e57565b50634e487b7160e01b600052604160045260246000fd5b6001600160401b0381116107a357604052565b6107ab610779565b604052565b604081019081106001600160401b038211176107a357604052565b602081019081106001600160401b038211176107a357604052565b606081019081106001600160401b038211176107a357604052565b90601f801991011681019081106001600160401b038211176107a357604052565b6040519061082f826107b0565b565b6020906001600160401b03811161084e575b601f01601f19160190565b610856610779565b610843565b81601f8201121561000e5780359061087282610831565b926108806040519485610801565b8284526020838301011161000e57816000926020809301838601378301015290565b5060408060031936011261000e576004906001600160401b03823581811161000e576108d19036908501610749565b93909160243590811161000e576108eb903690830161085b565b67011c37937e080000803403610a6f575060005460011990600019810190828211610a62575b7f000000000000000000000000000000000000000000000000000000000000000091828211610a31575050336000908152600560205260409081902054901c6001600160401b03169050908111610a24575b600260018201116109f4575083519033602083015260208252610985826107b0565b600f546001600160a01b039081169290919073e94098906c4bd7c9d8e2706159d226c5bc72b7371984016109c4575b6000876109c18a89612b38565b51f35b906109d16109d6926128eb565b612810565b5016036109e657808080806109b4565b8251638baa579f60e01b8152fd5b808386602493600210610a17575b5191637e0311c360e11b835260020390820152fd5b610a1f61268e565b610a02565b610a2c61268e565b610963565b6001839289889360249610610a55575b5163cbbf111360e01b815293030190820152fd5b610a5d61268e565b610a41565b610a6a61268e565b610911565b8260249186519163b23bee0560e01b8352820152fd5b503461000e57600036600319011261000e576040517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b503461000e57600036600319011261000e576000546001546040519103600019018152602090f35b606090600319011261000e57600435610b0b8161067a565b90602435610b188161067a565b9060443590565b50610b32610b2c36610af3565b916121bd565b005b503461000e57604036600319011261000e57610b546024356004356131d6565b604080516001600160a01b03939093168352602083019190915290f35b503461000e5760208060031936011261000e57600435906001600160401b0380831161000e573660238401121561000e57826004013590811161000e576024903682828601011161000e57610bc4612636565b604092835194848652610bd8858701611b59565b938685038388015283855283818301848701377f19c1a81f34d9a8d208a44017474815e9089aff4b57e461c08509577eea2c3900600097888587890101528481601f199889601f8a011601030190a16000199283885401927f6bd5c950a8d8df17f772f5af37cb3655737899cbf903264b9795592da439661c88805160019687825285820152a1610c7386610c6e600d54611b1f565b61336d565b8891601f8711600114610caf575085965090859392918996610ca2575b5050501b9260031b1c191617600d5551f35b0101359350388080610c90565b9490939686908116610cd1600d6000526000805160206133f183398151915290565b968b905b8a838310610d0e5750505010610cf4575b5050505050811b01600d5551f35b60f88660031b161c19920101351690553880808080610ce6565b8887018801358a55909801979485019489935090810190610cd5565b503461000e57602036600319011261000e57600435610d488161067a565b610d50612636565b600f54604080516001600160a01b03848116825280841660208301529293917fd9c1a818d3059379d98e9173f10c617e05fb6e1d11051d2abeb3c1e7c8b7046891a16001600160a01b0319909216911617600f55005b50610b32610db336610af3565b9060405192610dc1846107cb565b6000845261238b565b503461000e57604036600319011261000e5760043560243560005b818110610dee57005b80610e0b91198411610e10575b610e06818501612fd7565b612aaf565b610de5565b610e1861268e565b610dfb565b503461000e57600036600319011261000e57602060405167011c37937e0800008152f35b503461000e57602036600319011261000e57600435610e5f8161067a565b610e67612636565b600c54604080516001600160a01b03808416825290931660208401819052927f10e9b6d73105db46c6a41a698f35efb8e1688178fe274b7b21f0bdc792de3ea59190a17f6bd5c950a8d8df17f772f5af37cb3655737899cbf903264b9795592da439661c604060001960005401815190600182526020820152a16001600160a01b03191617600c55005b503461000e57600036600319011261000e57600b546040516001600160a01b039091168152602090f35b6020908160408183019282815285518094520193019160005b828110610f42575050505090565b9091929382608082610f8d600194895162ffffff6060809260018060a01b0381511685526001600160401b036020820151166020860152604081015115156040860152015116910152565b01950193929101610f34565b503461000e57602036600319011261000e576004356001600160401b03811161000e57610fca903690600401610749565b906040519180835260051b6020818401016040525b8081801561100457610ffb90601f198091019385010135612583565b90840152610fdf565b604051806105a38782610f1b565b503461000e57602036600319011261000e57602060043562ffffff80606061103984612583565b015116916040519284840191825260408401526040835260608301928084106001600160401b03851117611074575b83604052519020168152f35b61107c610779565b611068565b503461000e57602036600319011261000e5760206110ba60043560ff6001918060081c600052600e602052161b60406000205416151590565b6040519015158152f35b503461000e57602036600319011261000e5760206001600160a01b036110eb6004356120df565b16604051908152f35b503461000e57602036600319011261000e57602061111c6004356111178161067a565b6120a5565b604051908152f35b503461000e576000806003193601126106235761113f612636565b600880546001600160a01b031981169091556040519082906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08284a3f35b503461000e5760006060366003190112610623576004356111a68161067a565b81604435916111b48361067a565b6111bc612636565b6001600160a01b0390811692833b1561122957606490836040519586948593632142170760e11b855230600486015216602484015260243560448401525af1801561121c575b61120d575b50604051f35b61121690610790565b38611207565b6112246123e3565b611202565b8280fd5b602060031982011261000e57600435906001600160401b03821161000e576105469160040161085b565b506112613661122d565b6701aa535d3d0c00008034036113dd5750600054600119906000198101908282116113d0575b7f00000000000000000000000000000000000000000000000000000000000000009182821161139e575050336000908152600560205260409081902054901c6001600160401b03169050908111611391575b600260018201116113605750604051336020820152602081526112fb816107b0565b600f546001600160a01b039081169290919073e94098906c4bd7c9d8e2706159d226c5bc72b737198401611332575b610b326126f5565b6109d161133e926128eb565b50160361134e573880808061132a565b604051638baa579f60e01b8152600490fd5b80602491600210611384575b60405190637e0311c360e11b82526002036004820152fd5b61138c61268e565b61136c565b61139961268e565b6112d9565b8291600191602494106113c3575b60405163cbbf111360e01b81529203016004820152fd5b6113cb61268e565b6113ac565b6113d861268e565b611287565b6024906040519063b23bee0560e01b82526004820152fd5b6020908160408183019282815285518094520193019160005b82811061141c575050505090565b83518552938101939281019260010161140e565b503461000e57602036600319011261000e5760043561144e8161067a565b611457816120a5565b6040805191600193600590858301821b8501845282855260009081875b858403611488578651806105a38a826113f5565b806114938a926125d8565b88810151156114a4575b5001611474565b51806114ce575b5083831860601b156114be575b3861149d565b938101938085871b8a01526114b8565b9250386114ab565b503461000e57600036600319011261000e57600c546040516001600160a01b039091168152602090f35b503461000e57600036600319011261000e576008546040516001600160a01b039091168152602090f35b503461000e57600036600319011261000e57602060405173e94098906c4bd7c9d8e2706159d226c5bc72b7388152f35b503461000e5760008060031936011261062357604051908060035461157e81611b1f565b8085529160019180831690811561060257506001146115a7576105a38561059781870382610801565b9250600383527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b5b8284106115ea575050508101602001610597826105a3610587565b805460208587018101919091529093019281016115cf565b503461000e5760608060031936011261000e576004356116218161067a565b602435604435908082948383101561178b575b6001809310611783575b60009384548091101561177b575b508094611658816120a5565b8784100280611670575b604051806105a389826113f5565b9091928094959650870381811115611773575b50604080519686830160051b8801825261169c86612583565b9281936116b26116ae85830151151590565b1590565b611761575b5081999796999787805b6116e1575b5050505050505050506105a392508152388080808080611662565b99989915611740575b826116f48c6125d8565b858101511561170c575b5088809a9b9c019b996116c1565b5180611738575b50868618881b15611725575b386116fe565b998801600581901b8a018c90529961171f565b955038611713565b808b148015611758575b156116ea57809998996116c6565b50818a1461174a565b516001600160a01b03169350386116b7565b905038611683565b95503861164c565b82915061163e565b6117936124e7565b611634565b8015150361000e57565b503461000e57604036600319011261000e576004356117c08161067a565b602435906117cd82611798565b3360009081526007602090815260408083206001600160a01b038516845290915290209115159160ff1981541660ff841617905560405191825260018060a01b0316907f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160203392a3005b503461000e57600036600319011261000e57602060001960005401604051908152f35b503461000e57600036600319011261000e5760206040516701aa535d3d0c00008152f35b503461000e57604036600319011261000e5760043561189d8161067a565b611928602435916118ad8361067a565b6118b5612636565b6040516370a0823160e01b815230600482015260209384926001600160a01b0316908383602481855afa92831561199b575b60009361196c575b5060405163a9059cbb60e01b81526001600160a01b03909116600482015260248101929092529092839190829060009082906044820190565b03925af1801561195f575b61193957005b81610b3292903d10611958575b6119508183610801565b8101906133db565b503d611946565b6119676123e3565b611933565b61198d919350843d8611611994575b6119858183610801565b8101906133cc565b91386118ef565b503d61197b565b6119a36123e3565b6118e7565b503461000e5760206119c16119bc3661122d565b612ce8565b62ffffff60405191168152f35b50608036600319011261000e576004356119e78161067a565b6024356119f38161067a565b606435916001600160401b03831161000e57611a16610b3293369060040161085b565b916044359161238b565b503461000e57602036600319011261000e57600435611a3e8161067a565b611a46612636565b600b80546001600160a01b0319166001600160a01b0392909216919091179055005b503461000e57602036600319011261000e576080611a87600435612583565b611aca604051809262ffffff6060809260018060a01b0381511685526001600160401b036020820151166020860152604081015115156040860152015116910152565bf35b503461000e57602036600319011261000e576105a3611aec600435613046565b604051918291602083526020830190610510565b503461000e57600036600319011261000e576020601154604051908152f35b90600182811c92168015611b4f575b6020831014611b3957565b634e487b7160e01b600052602260045260246000fd5b91607f1691611b2e565b600d5460009291611b6982611b1f565b80825291600190818116908115611bce5750600114611b8757505050565b91929350600d6000526000805160206133f1833981519152916000925b848410611bb657505060209250010190565b80546020858501810191909152909301928101611ba4565b60ff191660208401525050604001925050565b503461000e57600080600319360112610623576040519080600d54611c0581611b1f565b808552916001918083169081156106025750600114611c2e576105a38561059781870382610801565b9250600d83526000805160206133f18339815191525b828410611c5f575050508101602001610597826105a3610587565b80546020858701810191909152909301928101611c44565b503461000e57600036600319011261000e5760206040517f00000000000000000000000000000000000000000000000000000000000000008152f35b503461000e57602036600319011261000e576004356001600160601b03811680820361000e5761271090611ce5612636565b11611d3f57610b3290611cf9301515613321565b611d18611d04610822565b308152916001600160601b03166020830152565b805160209091015160a01b6001600160a01b0319166001600160a01b039190911617600955565b60405162461bcd60e51b815260206004820152602a60248201527f455243323938313a20726f79616c7479206665652077696c6c206578636565646044820152692073616c65507269636560b01b6064820152608490fd5b503461000e57602036600319011261000e57602061111c600435611dba8161067a565b60018060a01b031660005260056020526001600160401b0360406000205460401c1690565b503461000e57604036600319011261000e57602060ff611e3c600435611e048161067a565b60243590611e118261067a565b60018060a01b03166000526007845260406000209060018060a01b0316600052602052604060002090565b54166040519015158152f35b503461000e57602036600319011261000e57600435611e668161067a565b611e6e612636565b6001600160a01b03908116908115611ec45760009160085491816001600160601b0360a01b84161760085560405192167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08484a3f35b60405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b503461000e57604036600319011261000e576004356024356001600160401b03811161000e57611f4c90369060040161085b565b601054604080513360208201529081018490526060810191909152611f7e81608081015b03601f198101835282610801565b600f546001600160a01b039081169173e94098906c4bd7c9d8e2706159d226c5bc72b737198301611fb4575b610b328486612e8e565b836109d1611fc1926128eb565b50160361134e57388080611faa565b503461000e57602036600319011261000e57600435611fee8161067a565b611ff6612636565b471561205257600080809247604051915af16120106123f0565b501561201857005b60405162461bcd60e51b81526020600482015260126024820152714661696c656420746f20776974686472617760701b6044820152606490fd5b60405162461bcd60e51b815260206004820152600c60248201526b5a65726f2062616c616e636560a01b6044820152606490fd5b503461000e57600036600319011261000e576020601054604051908152f35b6001600160a01b031680156120ce5760005260056020526001600160401b036040600020541690565b6323d3ad8160e21b60005260046000fd5b600090600190808211156120fd575b636f96cda160e11b8352600483fd5b8083526004602052604083205491600160e01b83161561211d57506120ee565b909192831561212d575b50505090565b8054831015612173575090815b6121445780612127565b9091506000190161215f816000526004602052604060002090565b5491821561216c57505090565b908161213a565b636f96cda160e11b8152600490fd5b806001111590816121b1575b81612197575090565b90506000526004602052600160e01b604060002054161590565b6000548110915061218e565b9190916121c9826120df565b6001600160a01b03918216939082811685900361237e575b6000848152600660205260409020805461220a6001600160a01b03881633908114908314171590565b612328575b61231e575b506001600160a01b038581166000908152600560205260408082208054600019019055918416815220805460010190556001600160e81b031961225c60e883901c8488612d3d565b60e81b1661227f600160e11b91821784904260a01b179060018060a01b03161790565b612293866000526004602052604060002090565b558116156122d4575b501680927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef600080a4156122cc57565b61082f61251c565b600184016122ec816000526004602052604060002090565b54156122f9575b5061229c565b60005481146122f357612316906000526004602052604060002090565b5538806122f3565b6000905538612214565b61236c6116ae6123653361234e8b60018060a01b03166000526007602052604060002090565b9060018060a01b0316600052602052604060002090565b5460ff1690565b1561220f5761237961250a565b61220f565b6123866124f9565b6121e1565b9291906123998282866121bd565b803b6123a6575b50505050565b6123af93612420565b156123bd57388080806123a0565b6368d2bf6b60e11b60005260046000fd5b9081602091031261000e575161054681610404565b506040513d6000823e3d90fd5b3d1561241b573d9061240182610831565b9161240f6040519384610801565b82523d6000602084013e565b606090565b604051630a85bd0160e11b8082523360048301526001600160a01b03928316602483015260448201949094526080606482015292936020928492909183916000918390612471906084830190610510565b0393165af1600091816124b7575b506124a95761248c6123f0565b80511561249c575b805190602001fd5b6124a461252e565b612494565b6001600160e01b0319161490565b6124d991925060203d81116124e0575b6124d18183610801565b8101906123ce565b903861247f565b503d6124c7565b50631960ccad60e11b60005260046000fd5b5062a1148160e81b60005260046000fd5b50632ce44b5f60e11b60005260046000fd5b50633a954ecd60e21b60005260046000fd5b506368d2bf6b60e11b60005260046000fd5b60405190608082018281106001600160401b03821117612576575b60405260006060838281528260208201528260408201520152565b61257e610779565b61255b565b9061258c612540565b91600181101561259a575b50565b60005481106125a65750565b91506125b1826125d8565b916040830151612597576105469192506125d3906125cd612540565b506120df565b6125f3565b6125e0612540565b5060005260046020526105466040600020545b906125fc612540565b6001600160a01b038316815260a083901c6001600160401b03166020820152600160e01b83161515604082015260e89290921c6060830152565b6008546001600160a01b0316330361264a57565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b50634e487b7160e01b600052601160045260246000fd5b60019060011981116126b5570190565b6126bd61268e565b0190565b600181106126d1575b6000190190565b6126d961268e565b6126ca565b8181106126e9570390565b6126f161268e565b0390565b61082f335b60008054916127916040519183602084015261276260018060a01b038216938460408201526040815261272c816107e6565b6001600160e81b03199061273f90612ce8565b6001600160a01b0384164260a01b60e89290921b929092161717600160e11b1790565b612776866000526004602052604060002090565b556001600160a01b0316600090815260056020526040902090565b680100000000000000018154019055801561280257600190818401939180805b6127bd575b5050505055565b156127f1575b83818484877fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8180a46127b1565b809201918483036127c357806127b6565b622e076360e81b8252600482fd5b90604181511460001461283e5761283a916020820151906060604084015193015160001a90612848565b9091565b5050600090600290565b9291907f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a083116128cc5791608094939160ff602094604051948552168484015260408301526060820152600093849182805260015afa156128bf575b81516001600160a01b038116156128b9579190565b50600190565b6128c76123e3565b6128a4565b50505050600090600390565b906126bd602092828151948592016104db565b805190816000927a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000080821015612a6f575b506d04ee2d6d415b85acef810000000080831015612a60575b50662386f26fc1000080831015612a51575b506305f5e10080831015612a42575b5061271080831015612a33575b506064821015612a23575b600a80921015612a19575b600190816021612985828801612a7d565b96870101905b6129e3575b505050506129dd611f70916040519283916129d760208401966129d788601a907f19457468657265756d205369676e6564204d6573736167653a0a00000000000081520190565b906128d8565b51902090565b600019019083906f181899199a1a9b1b9c1cb0b131b232b360811b8282061a835304918215612a145791908261298b565b612990565b9260010192612974565b9290606460029104910192612969565b6004919492049101923861295e565b60089194920491019238612951565b60109194920491019238612942565b60209194920491019238612930565b604094508104915038612917565b90612a8782610831565b612a946040519182610801565b8281528092612aa5601f1991610831565b0190602036910137565b60019060001981146126b5570190565b9190811015612acf5760051b0190565b634e487b7160e01b600052603260045260246000fd5b9081602091031261000e57516105468161067a565b6001600160a01b03909116815260406020820181905281018390526001600160fb1b03831161000e5760609260051b80928483013701016000815290565b916001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116929160009182905b848410612b945760405163039e5b7760e51b815280612b90878a8a60048501612afa565b0390fd5b612ba684868995989699979497612abf565b3594612bcb8660ff6001918060081c600052600e602052161b60406000205416151590565b612cd857604080516331a9108f60e11b81526004810188905290989060209081816024818b5afa918215612ccb575b8492612c9e575b50508333911603612c86575050505050612c7a7f3626b5db6ac6441079214cae6a8c3aaaa1681a609a0b424772b5b4f5297a114f9394612c5a848060081c600052600e602052600160ff604060002092161b8154179055565b516001600160a01b03909216825260208201929092529081906040820190565b0390a161082f336126fa565b90929550612c98919496939750612aaf565b92612b6c565b612cbd9250803d10612cc4575b612cb58183610801565b810190612ae5565b3880612c01565b503d612cab565b612cd36123e3565b612bfa565b91945092949195612c9890612aaf565b62ffffff9060014310612d30575b604051612d2981611f706020820194448652600019430140604084015233606084015260808084015260a0830190610510565b5190201690565b612d3861268e565b612cf6565b9162ffffff8116612d765750604080516001600160a01b0393841660208201529290911690820152610546906119bc8160608101611f70565b91505090565b15612d8357565b60405162461bcd60e51b815260206004820152601360248201527224ba13b9903a34b6b2903a37903634b9ba32b760691b6044820152606490fd5b15612dc557565b60405162461bcd60e51b81526020600482015260136024820152724e6f77206973206e6f74207468652074696d6560681b6044820152606490fd5b15612e0757565b60405162461bcd60e51b815260206004820152601b60248201527f5468657265206973206e6f7468696e6720746f206469737075746500000000006044820152606490fd5b15612e5357565b60405162461bcd60e51b815260206004820152601360248201527215d948185c99481a5b881859dc99595b595b9d606a1b6044820152606490fd5b612f8690612f76612f707ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce794612ec76011541515612d7c565b612ee0610884612ed9601054436126de565b1015612dbe565b612ef1612eec85612182565b612e00565b612f19612f12612f06612f06612f06886120df565b6001600160a01b031690565b3314612e4c565b62ffffff612f356060612f2b876125d8565b015162ffffff1690565b1615612fc9575b612f45846126a5565b6000541180612fa1575b612f8b575b612f67612f626011546126c1565b601155565b6119bc43601055565b82613008565b6040519081529081906020820190565b0390a1565b612f9c612f97856126a5565b612fd7565b612f54565b50612fc3612fbb6060612f2b612fb6886126a5565b6125d8565b62ffffff1690565b15612f4f565b612fd284612fd7565b612f3c565b80600052600460205260406000205415612fee5750565b612ff7816120df565b906000526004602052604060002055565b60009181835260046020526040832054918215613038579060409291845260e81b9060018060e81b031617912055565b62d5815360e01b8452600484fd5b600c546001600160a01b0316908161306257610546915061311b565b60405191829163c87b56dd60e01b8352600483015281602460009485935afa91821561310e575b809261309457505090565b9091503d8082843e6130a68184610801565b82019160208184031261310a578051906001600160401b038211611229570182601f8201121561310a578051916130dc83610831565b936130ea6040519586610801565b8385526020848401011161062357509061054691602080850191016104db565b5080fd5b6131166123e3565b613089565b61312481612182565b156131c557604051906131418261313a81611b59565b0383610801565b8151600090156131b057506040519060a08201604052608082019060008252905b6000190190600a9060308282060183530490816131625790506129d7926131a4610546936080601f1994858101920301815260405195869360208501906128d8565b03908101835282610801565b915050604051906131c0826107cb565b815290565b630a14c4b560e41b60005260046000fd5b600b546001600160a01b0316929190836131f55761283a929350613279565b9060446040928351958693849263152a902d60e11b8452600484015260248301525afa91821561326c575b600090819361322e57509190565b92506040833d8211613264575b8161324860409383610801565b810103126106235750602082519261325f8461067a565b015190565b3d915061323b565b6132746123e3565b613220565b919091600052600a602052612710604060002060405190613299826107b0565b546001600160a01b0380821680845260a09290921c602084015290156132fd575b506132ea6001600160601b036020830151169185600019048311861515166132f0575b516001600160a01b031690565b93020490565b6132f861268e565b6132dd565b604051915061330b826107b0565b600954908116825260a01c6020820152386132ba565b1561332857565b60405162461bcd60e51b815260206004820152601960248201527f455243323938313a20696e76616c6964207265636569766572000000000000006044820152606490fd5b601f8111613379575050565b600090600d82526000805160206133f1833981519152906020601f850160051c830194106133c2575b601f0160051c01915b8281106133b757505050565b8181556001016133ab565b90925082906133a2565b9081602091031261000e575190565b9081602091031261000e57516105468161179856fed7b6990105719101dabeb77144f2a3385c8033acd3af97e9423a695e81ad1eb5a164736f6c634300080d000a";

type AFundamentalDisputeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AFundamentalDisputeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AFundamentalDispute__factory extends ContractFactory {
  constructor(...args: AFundamentalDisputeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _foldedFaces: PromiseOrValue<string>,
    artist: PromiseOrValue<string>,
    developer: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<AFundamentalDispute> {
    return super.deploy(
      _foldedFaces,
      artist,
      developer,
      overrides || {}
    ) as Promise<AFundamentalDispute>;
  }
  override getDeployTransaction(
    _foldedFaces: PromiseOrValue<string>,
    artist: PromiseOrValue<string>,
    developer: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _foldedFaces,
      artist,
      developer,
      overrides || {}
    );
  }
  override attach(address: string): AFundamentalDispute {
    return super.attach(address) as AFundamentalDispute;
  }
  override connect(signer: Signer): AFundamentalDispute__factory {
    return super.connect(signer) as AFundamentalDispute__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AFundamentalDisputeInterface {
    return new utils.Interface(_abi) as AFundamentalDisputeInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AFundamentalDispute {
    return new Contract(address, _abi, signerOrProvider) as AFundamentalDispute;
  }
}
