"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ExampleNFTMinter__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [
            {
                internalType: "uint256",
                name: "_price",
                type: "uint256",
            },
        ],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "limit",
                type: "uint256",
            },
        ],
        name: "MintLimitExceeded",
        type: "error",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "supply",
                type: "uint256",
            },
        ],
        name: "MintSupplyExceeded",
        type: "error",
    },
    {
        inputs: [],
        name: "WrongPayment",
        type: "error",
    },
    {
        anonymous: false,
        inputs: [],
        name: "Initialized",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "previousOwner",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "newOwner",
                type: "address",
            },
        ],
        name: "OwnershipTransferred",
        type: "event",
    },
    {
        inputs: [
            {
                internalType: "uint256",
                name: "numToBeMinted",
                type: "uint256",
            },
        ],
        name: "mint",
        outputs: [],
        stateMutability: "payable",
        type: "function",
    },
    {
        inputs: [],
        name: "nft",
        outputs: [
            {
                internalType: "contract IDelegatedMint",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "owner",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "price",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "renounceOwnership",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "newOwner",
                type: "address",
            },
        ],
        name: "transferOwnership",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "withdrawAll",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "contract IERC20",
                name: "token",
                type: "address",
            },
        ],
        name: "withdrawAllERC20",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
];
const _bytecode = "0x60a060405234801561001057600080fd5b506040516107f03803806107f083398101604081905261002f916100bc565b6100383361006c565b60808190526040517f5daa87a0e9463431830481fd4b6e3403442dfb9a12b9c07597e9f61d50b633c890600090a1506100d5565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100ce57600080fd5b5051919050565b6080516106f96100f76000396000818161013901526103a201526106f96000f3fe60806040526004361061007b5760003560e01c80638da5cb5b1161004e5780638da5cb5b14610109578063a035b1fe14610127578063a0712d6814610169578063f2fde38b1461017c57600080fd5b806347ccca0214610080578063715018a6146100bd578063853828b6146100d4578063857abbd4146100e9575b600080fd5b34801561008c57600080fd5b506001546100a0906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156100c957600080fd5b506100d261019c565b005b3480156100e057600080fd5b506100d26101b0565b3480156100f557600080fd5b506100d2610104366004610627565b610297565b34801561011557600080fd5b506000546001600160a01b03166100a0565b34801561013357600080fd5b5061015b7f000000000000000000000000000000000000000000000000000000000000000081565b6040519081526020016100b4565b6100d261017736600461064b565b61039b565b34801561018857600080fd5b506100d2610197366004610627565b6104f2565b6101a4610568565b6101ae60006105c2565b565b6101b8610568565b600047116101fc5760405162461bcd60e51b815260206004820152600c60248201526b5a65726f2062616c616e636560a01b60448201526064015b60405180910390fd5b600080546040516001600160a01b039091169047908381818185875af1925050503d8060008114610249576040519150601f19603f3d011682016040523d82523d6000602084013e61024e565b606091505b50509050806102945760405162461bcd60e51b81526020600482015260126024820152714661696c656420746f20776974686472617760701b60448201526064016101f3565b50565b61029f610568565b806001600160a01b031663a9059cbb6102c06000546001600160a01b031690565b6040516370a0823160e01b81523060048201526001600160a01b038516906370a0823190602401602060405180830381865afa158015610304573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103289190610664565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af1158015610373573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610397919061067d565b5050565b806103c6817f00000000000000000000000000000000000000000000000000000000000000006106b5565b34146103e55760405163788a686f60e01b815260040160405180910390fd5b60015460405163dc33e68160e01b815233600480830191909152918491839183916001600160a01b039091169063dc33e68190602401602060405180830381865afa158015610438573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061045c9190610664565b61046691906106d4565b111561048857604051637e0311c360e11b8152600481018390526024016101f3565b600154604051632851206560e21b8152336004820152602481018690526001600160a01b039091169063a144819490604401600060405180830381600087803b1580156104d457600080fd5b505af11580156104e8573d6000803e3d6000fd5b5050505050505050565b6104fa610568565b6001600160a01b03811661055f5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016101f3565b610294816105c2565b6000546001600160a01b031633146101ae5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016101f3565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b038116811461029457600080fd5b60006020828403121561063957600080fd5b813561064481610612565b9392505050565b60006020828403121561065d57600080fd5b5035919050565b60006020828403121561067657600080fd5b5051919050565b60006020828403121561068f57600080fd5b8151801515811461064457600080fd5b634e487b7160e01b600052601160045260246000fd5b60008160001904831182151516156106cf576106cf61069f565b500290565b600082198211156106e7576106e761069f565b50019056fea164736f6c634300080d000a";
const isSuperArgs = (xs) => xs.length > 1;
class ExampleNFTMinter__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    deploy(_price, overrides) {
        return super.deploy(_price, overrides || {});
    }
    getDeployTransaction(_price, overrides) {
        return super.getDeployTransaction(_price, overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.ExampleNFTMinter__factory = ExampleNFTMinter__factory;
ExampleNFTMinter__factory.bytecode = _bytecode;
ExampleNFTMinter__factory.abi = _abi;
