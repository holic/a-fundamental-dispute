/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { AFDRenderer, AFDRendererInterface } from "../AFDRenderer";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract NFT",
        name: "_token",
        type: "address",
      },
      {
        internalType: "contract IFileStore",
        name: "_fileStore",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [],
    name: "Initialized",
    type: "event",
  },
  {
    inputs: [],
    name: "fileStore",
    outputs: [
      {
        internalType: "contract IFileStore",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "seedOf",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract NFT",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "";

type AFDRendererConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AFDRendererConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AFDRenderer__factory extends ContractFactory {
  constructor(...args: AFDRendererConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _token: PromiseOrValue<string>,
    _fileStore: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<AFDRenderer> {
    return super.deploy(
      _token,
      _fileStore,
      overrides || {}
    ) as Promise<AFDRenderer>;
  }
  override getDeployTransaction(
    _token: PromiseOrValue<string>,
    _fileStore: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_token, _fileStore, overrides || {});
  }
  override attach(address: string): AFDRenderer {
    return super.attach(address) as AFDRenderer;
  }
  override connect(signer: Signer): AFDRenderer__factory {
    return super.connect(signer) as AFDRenderer__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AFDRendererInterface {
    return new utils.Interface(_abi) as AFDRendererInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AFDRenderer {
    return new Contract(address, _abi, signerOrProvider) as AFDRenderer;
  }
}
